onetime
pad
authentication
i
can
think
of
a
couple
of
ways
of
guaranteeing
authenticity
in
a
onetime
pad
encrytped
scheme
though
im
not
sure
how
to
prove
that
what
kind
of
authenicity
they
provide
an
obvious
firstattempt
might
be
to
prepend
a
truly
random
unpredictable
for
eve
block
to
the
message
and
then
calculate
a
crc
which
included
the
random
starting
block
and
all
of
the
message
this
could
be
encrypted
after
the
message
the
problem
is
im
not
sure
its
impossible
to
come
up
with
a
message
that
will
hash
to
the
same
crc
regardless
of
the
random
starting
block
it
intuitively
seems
like
it
ought
to
be
hard
but
im
not
that
sure
clearly
a
cryptostrength
hash
like
or
the
sha
would
be
stronger
but
again
im
not
sure
im
comfortable
claiming
that
its
unbreakable
a
scheme
to
use
up
some
of
the
pad
bits
to
decide
how
many
bits
of
to
include
in
the
plaintext
stream
before
going
on
wouldnt
be
too
bad
either
at
the
cost
of
increasing
the
speed
with
which
you
use
up
your
pad
this
could
be
used
to
give
you
arbitrarily
low
probability
that
your
opponent
could
spoof
a
validlooking
message
since
any
deciphered
plaintext
in
a
spot
that
should
be
carrying
will
show
that
something
funnys
going
on
if
for
each
message
bit
mi
we
used
up
one
random
bit
ri
to
decide
whether
to
insert
a
into
the
plaintext
stream
wed
get
a
total
pad
use
of
times
the
message
length
wed
expand
the
message
size
by
about
half
each
that
should
appear
in
the
plaintext
stream
that
doesnt
is
a
guess
for
our
wouldbe
spoofer
at
each
bit
she
has
to
guess
im
trying
to
see
how
to
quantify
her
chances
of
making
it
all
the
way
through
the
spoofed
message
but
it
gets
a
little
complicated
because
she
can
get
un
synched
and
still
happen
to
have
a
in
that
place
in
the
spoofed
message
now
i
can
see
a
simple
way
of
doing
this
thats
got
to
be
as
secure
as
a
onetime
pad
at
a
cost
of
using
times
the
message
length
in
pad
bits
for
each
message
bit
mi
use
one
random
bit
ri
and
xor
them
together
to
get
xi
now
encrypt
the
three
bits
with
the
onetime
pad
the
enemy
has
no
way
of
guessing
what
ri
is
so
heshe
cant
guess
what
xi
is
either
any
change
she
makes
in
the
ciphertext
stream
will
have
to
involve
a
guess
of
what
ri
was
is
there
any
way
to
do
this
without
using
so
many
pad
bits
spoofing
the
message
is
equivalent
to
correctly
guessing
as
many
random
bits
as
there
are
bits
in
the
message
clearly
this
makes
spoofing
messages
just
as
hard
if
you
know
the
whole
message
text
as
if
you
know
none
of
it
in
fact
it
looks
to
me
like
this
makes
it
just
as
hard
to
generate
a
spoofed
message
with
the
ciphertext
as
without
it
but
im
not
entirely
sure
about
that
is
there
an
easier
way
of
doing
this
thats
provably
as
secure
as
the
onetime
pad
john
kelsey
