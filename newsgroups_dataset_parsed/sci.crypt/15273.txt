RE
SOURCE
OF
RANDOM
BITS
ON
A
UNIX
WORKSTATION
IN
ARTICLE
BETSBICOM
BENNETT
TODD
SALOMON
BROTHERS
INC
NY
WRITES
I
HEARD
ABOUT
THIS
SOLUTION
AND
IT
SOUNDED
GOOD
THEN
I
HEARD
THAT
FOLKS
WERE
EXPERIENCING
TIMES
OF
SECONDS
TO
RUN
THIS
ON
REASONABLYCONFIGURED
WORKSTATIONS
IM
NOT
WILLING
TO
ADD
THAT
MUCH
DELAY
TO
SOMEONES
LOGIN
PROCESS
MY
APPROACH
ETHERFINDCOMPRESS
SKIP
TAKES
A
SECOND
OR
TWO
TO
RUN
IM
CONSIDERING
WRITING
THE
BEALL
AND
ENDALL
OF
SOLUTIONS
THAT
LAUNCHES
THE
AND
SIMULTANEOUSLY
TRIES
TO
SUCK
BITS
OFF
THE
NET
AND
IF
THE
NET
SHOULD
BE
SITTING
SO
IDLE
THAT
IT
CANT
GET
AFTER
COMPRESSION
BEFORE
FINISHES
USE
THE
THIS
WAY
I
COULD
HAVE
GUARANTEED
GOOD
BITS
AND
A
DETERMINISTIC
UPPER
BOUND
ON
LOGIN
TIME
AND
STILL
HAVE
THE
COMMON
CASE
OF
LOGIN
TAKE
ONLY
A
COUPLE
OF
EXTRA
SECONDS
SECONDS
TO
HASH
OF
CORE
I
BET
I
KNOW
WHO
THE
SOURCE
OF
YOUR
INFORMATION
IS
NO
ITS
NOT
ACCEPTABLE
IF
ITS
PART
OF
YOUR
LOGIN
PROCESS
BUT
IF
YOU
ARE
GOING
TO
USE
NETWORK
TRAFFIC
AS
THE
SOURCE
OF
PSEUDORANDOM
INFORMATION
DO
THE
RIGHT
THING
AND
PASS
IT
THROUGH
A
CRYPTOGRAPHIC
HASH
FUNCTION
NOT
A
COMPRESSOR
ASIDE
FROM
THE
FACT
THAT
IT
WILL
RUN
FASTER
IT
WILL
GIVE
BETTER
RESULTS
THINK
OF
A
CRYPTOGRAPHIC
HASH
AS
A
FUNCTION
THAT
DISTILLS
RANDOMNESS
SOMETHING
ALONG
THE
LINES
OF
ETHERFIND
T
X
N
DD
SHOULD
DO
THE
TRICK
T
GIVES
YOU
TIMESTAMPS
AND
THE
LACK
OF
U
MAKES
SURE
THAT
DD
DOES
NOT
GET
TEN
LINES
AS
OPPOSED
TO
TEN
K
THE
ABOVE
TAKES
A
COUPLE
OF
SECONDS
ON
A
LIGHTLYLOADED
ETHERNET
BENNETT
BETSBICOM
JI
