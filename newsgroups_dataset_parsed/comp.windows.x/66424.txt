compwindowsx
frequently
asked
questions
faq
archivename
lastmodified
subject
im
writing
a
widget
and
cant
use
a
float
as
a
resource
value
float
resources
are
not
portable
the
size
of
the
value
may
be
larger
than
the
size
of
an
xtpointer
try
using
a
pointer
to
a
float
instead
the
xaw
scrollbar
float
resources
are
handled
in
this
way
subject
is
this
a
memory
leak
in
the
xtdestroywidget
yes
this
is
the
unofficial
for
the
destroyc
thu
jul
libxtdestroyc
thu
jul
xconsortium
destroycv
swick
exp
plus
unofficial
patches
in
revisions
and
copyright
by
digital
equipment
corporation
maynard
massachusetts
int
i
destroyrec
dr
appdestroylist
while
i
appdestroycount
if
drdispatchlevel
dispatchlevel
widget
w
drwidget
if
appdestroycount
bcopy
chardr
appdestroycountsizeofdestroyrec
else
i
dr
int
i
destroyrec
dr
while
i
appdestroycount
can
result
in
calls
to
xtdestroywidget
and
these
could
cause
appdestroylist
to
be
reallocated
dr
appdestroylist
i
if
drdispatchlevel
dispatchlevel
widget
w
drwidget
if
appdestroycount
bcopy
chardr
appdestroycount
i
sizeofdestroyrec
else
i
from
donna
converse
converseexpolcsmitedu
subject
are
callbacks
guaranteed
to
be
called
in
the
order
registered
although
some
books
demonstrate
that
the
current
implementation
of
xt
happens
to
call
callback
procedures
in
the
order
in
which
they
are
registered
the
specification
does
not
guarantee
such
a
sequence
and
supplemental
authoritative
documents
ie
the
asenteswick
volume
do
say
that
the
order
is
undefined
because
the
callback
list
can
be
manipulated
by
both
the
widget
and
the
application
xt
cannot
guarantee
the
order
of
execution
in
general
the
callback
procedures
should
be
thought
of
as
operating
independently
of
one
another
and
should
not
depend
on
sideeffects
of
other
callbacks
operating
if
a
seqence
is
needed
then
the
single
callback
to
be
registered
can
explicitly
call
other
functions
necessary
thanks
to
converseexpolcsmitedu
subject
why
doesnt
xtdestroywidget
actually
destroy
the
widget
xtdestroywidget
operates
in
two
passes
in
order
to
avoid
leaving
dangling
data
structures
the
functioncall
marks
the
widget
which
is
not
actually
destroyed
until
your
program
returns
to
its
eventloop
subject
how
do
i
query
the
user
synchronously
using
xt
it
is
possible
to
have
code
which
looks
like
this
trivial
callback
which
has
a
clear
flow
of
control
the
calls
to
askuser
block
until
answer
is
set
to
one
of
the
valid
values
if
it
is
not
a
yes
answer
the
code
drops
out
of
the
callback
and
back
to
an
eventprocessing
loop
void
quitwidget
w
xtpointer
client
xtpointer
call
int
answer
answer
askuserw
really
quit
if
retyes
answer
answer
askuserw
are
you
really
positive
if
retyes
answer
a
more
realistic
example
might
ask
whether
to
create
a
file
or
whether
to
overwrite
it
this
is
accomplished
by
entering
a
second
eventprocessing
loop
and
waiting
until
the
user
answers
the
question
the
answer
is
returned
to
the
calling
function
that
function
askuser
looks
something
like
this
where
the
motif
can
be
replaced
with
widgetsetspecific
code
to
create
some
sort
of
dialogbox
displaying
the
question
string
and
buttons
for
ok
cancel
and
help
or
equivalents
int
askuserw
string
widget
w
char
string
int
answerretnone
some
notused
marker
widget
dialog
could
cachecarry
but
arg
int
n
xtappcontext
context
xtsetargargsn
xmnmessagestring
xmstringcreateltorstring
xmstringdefaultcharset
n
xtsetargargsn
xmndialogstyle
xmdialogapplicationmodal
n
dialog
xmcreatequestiondialogxtparentw
string
args
n
xtaddcallbackdialog
xmnokcallback
response
answer
xtaddcallbackdialog
xmncancelcallback
response
answer
xtaddcallbackdialog
xmnhelpcallback
response
answer
xtmanagechilddialog
context
xtwidgettoapplicationcontext
w
while
answer
retnone
xtapppendingcontext
xtappprocessevent
context
xtimall
xtdestroywidgetdialog
blow
away
the
dialog
box
and
shell
return
answer
the
dialog
supports
three
buttons
which
are
set
to
call
the
same
function
when
tickled
by
the
user
the
variable
answer
is
set
when
the
user
finally
selects
one
of
those
choices
void
responsew
client
call
widget
w
xtpointer
client
xtpointer
call
int
answer
int
client
xmanycallbackstruct
reason
xmanycallbackstruct
call
switch
reasonreason
case
xmcrok
answer
retyes
some
define
value
break
case
xmcrcancel
answer
retno
break
case
xmcrhelp
answer
rethelp
break
default
return
and
the
code
unwraps
back
to
the
point
at
which
an
answer
was
needed
and
continues
from
there
thanks
to
dan
heller
argvsuncom
further
code
is
in
dans
widgetwrap
library
subject
how
do
i
determine
the
name
of
an
existing
widget
i
have
a
widget
id
and
need
to
know
what
the
name
of
that
widget
is
users
of
and
later
are
best
off
using
the
xtname
function
which
will
work
on
both
widgets
and
nonwidget
objects
if
you
are
still
using
you
can
use
this
simple
bit
of
code
to
do
what
you
want
note
that
it
depends
on
the
widgets
internal
data
structures
and
is
not
necessarily
portable
to
future
versions
of
xt
including
include
include
string
xtname
widget
widget
widget
will
work
with
nonwidget
objects
return
xrmnametostringwidgetcorexrmname
modified
with
suggestion
by
larry
rogers
larryboriswebodgcom
subject
why
do
i
get
a
baddrawable
error
drawing
to
xtwindowwidget
im
doing
this
in
order
to
get
a
window
into
which
i
can
do
xlib
graphics
within
my
xtbased
program
canvas
xtcreatemanagedwidget
widgetclass
drawing
area
window
xtwindowcanvas
get
the
window
associated
with
the
widget
xdrawline
window
produces
error
the
window
associated
with
the
widget
is
created
as
a
part
of
the
realization
of
the
widget
using
a
window
id
of
null
no
window
could
create
the
error
that
you
describe
it
is
necessary
to
call
xtrealizewidget
before
attempting
to
use
the
window
associated
with
a
widget
note
that
the
window
will
be
created
after
the
xtrealizewidget
call
but
that
the
server
may
not
have
actually
mapped
it
yet
so
you
should
also
wait
for
an
expose
event
on
the
window
before
drawing
into
it
subject
why
do
i
get
a
badmatch
error
when
calling
xgetimage
the
badmatch
error
can
occur
if
the
specified
rectangle
goes
off
the
edge
of
the
screen
if
you
dont
want
to
catch
the
error
and
deal
with
it
you
can
take
the
following
steps
to
avoid
the
error
make
a
pixmap
the
same
size
as
the
rectangle
you
want
to
capture
clear
the
pixmap
to
background
using
xfillrectangle
use
xcopyarea
to
copy
the
window
to
the
pixmap
if
you
get
a
noexpose
event
the
copy
was
clean
use
xgetimage
to
grab
the
image
from
the
pixmap
if
you
get
one
or
more
graphicsexpose
events
the
copy
wasnt
clean
and
the
xywidthheight
members
of
the
graphicsexpose
event
structures
tell
you
the
parts
of
the
pixmap
which
arent
good
get
rid
of
the
pixmap
it
probably
takes
a
lot
of
memory
thanks
to
oliver
jones
ojpictelcom
subject
how
can
my
application
tell
if
it
is
being
run
under
x
a
number
of
programs
offer
x
modes
but
otherwise
run
in
a
straight
characteronly
mode
the
easiest
way
for
an
application
to
determine
that
it
is
running
on
an
x
display
is
to
attempt
to
open
a
connection
to
the
x
server
display
xopendisplaydisplayname
if
display
do
x
stuff
else
do
curses
or
something
else
where
displayname
is
either
the
string
specified
on
the
commandline
following
display
by
convention
or
otherwise
is
charnull
in
which
case
xopendisplay
uses
the
value
of
display
if
set
this
is
superior
to
simply
checking
for
the
existence
a
display
commandline
argument
or
checking
for
display
set
in
the
environment
neither
of
which
is
adequate
subject
how
do
i
make
a
busy
cursor
while
my
application
is
computing
is
it
necessary
to
call
xdefinecursor
for
every
window
in
my
application
the
easiest
thing
to
do
is
to
create
a
single
inputonly
window
that
is
as
large
as
the
largest
possible
screen
make
it
a
child
of
your
toplevel
window
and
it
will
be
clipped
to
that
window
so
it
wont
affect
any
other
application
it
needs
to
be
as
big
as
the
largest
possible
screen
in
case
the
user
enlarges
the
window
while
it
is
busy
or
moves
elsewhere
within
a
virtual
desktop
substitute
toplevel
with
your
topmost
widget
here
similar
code
should
work
for
xlibonly
applications
just
use
your
top
window
unsigned
long
valuemask
xsetwindowattributes
attributes
ignore
device
events
while
the
busy
cursor
is
displayed
valuemask
cwdontpropagate
cwcursor
attributesdonotpropagatemask
keypressmask
keyreleasemask
buttonpressmask
buttonreleasemask
pointermotionmask
attributescursor
xcreatefontcursorxtdisplaytoplevel
xcwatch
the
window
will
be
as
big
as
the
display
screen
and
clipped
by
its
own
parent
window
so
we
never
have
to
worry
about
resizing
xcreatewindowxtdisplaytoplevel
xtwindowtoplevel
unsigned
int
inputonly
copyfromparent
valuemask
attributes
where
the
maximum
size
above
could
be
replaced
by
the
real
size
of
the
screen
particularly
to
avoid
servers
which
have
problems
with
windows
larger
than
when
you
want
to
use
this
busy
cursor
map
and
raise
this
window
to
go
back
to
normal
unmap
it
this
will
automatically
keep
you
from
getting
extra
mouse
events
depending
on
precisely
how
the
window
manager
works
it
may
or
may
not
have
a
similar
effect
on
keystrokes
as
well
in
addition
note
also
that
most
of
the
xaw
widgets
support
an
xtncursor
resource
which
can
be
temporarily
reset
should
you
merely
wish
to
change
the
cursor
without
blocking
pointer
events
thanks
to
andrew
wason
awcellarbaebellcorecom
dan
heller
argvsuncom
and
mouselarrymcrcimmcgilledu
subject
how
do
i
fork
without
hanging
my
parent
x
program
an
xbased
application
which
spawns
off
other
unix
processes
which
continue
to
run
after
it
is
closed
typically
does
not
vanish
until
all
of
its
children
are
terminated
the
children
inherit
from
the
parent
the
open
x
connection
to
the
display
what
you
need
to
do
is
fork
then
immediately
in
the
child
process
close
connectionnumberxtdisplaywidget
to
close
the
filedescriptor
in
the
display
information
after
this
do
your
exec
you
will
then
be
able
to
exit
the
parent
alternatively
before
execing
make
this
call
which
causes
the
file
descriptor
to
be
closed
on
exec
void
fcntlconnectionnumberxdisplay
fsetfd
thanks
to
janet
anstett
anstettjtrampcoloradoedu
gordon
freedman
greg
holmberg
holmbergframecom
subject
can
i
make
xt
or
xlib
calls
from
a
signal
handler
no
xlib
and
xt
have
no
mutual
exclusion
for
protecting
critical
sections
if
your
signal
handler
makes
such
a
call
at
the
wrong
time
which
might
be
while
the
function
you
are
calling
is
already
executing
it
can
leave
the
library
in
an
inconsistent
state
note
that
the
ansi
c
standard
points
out
that
behavior
of
a
signal
handler
is
undefined
if
the
signal
handler
calls
any
function
other
than
signal
itself
so
this
is
not
a
problem
specific
to
xlib
and
xt
the
posix
specification
mentions
other
functions
which
may
be
called
safely
but
it
may
not
be
assumed
that
these
functions
are
called
by
xlib
or
xt
functions
you
can
work
around
the
problem
by
setting
a
flag
in
the
interrupt
handler
and
later
checking
it
with
a
work
procedure
or
a
timer
event
which
has
previously
been
added
note
the
article
in
the
x
journal
and
the
example
in
oreilly
volume
are
in
error
thanks
to
pete
ware
warecisohiostateedu
and
donna
converse
converseexpolcsmitedu
subject
what
are
these
xlib
sequence
lost
errors
you
may
see
these
errors
if
you
issue
xlib
requests
from
an
xlib
error
handler
or
more
likely
if
you
make
calls
which
generate
x
requests
to
xt
or
xlib
from
a
signal
handler
which
you
shouldnt
be
doing
in
any
case
subject
how
can
my
xt
program
handle
socket
pipe
or
file
input
its
very
common
to
need
to
write
an
xt
program
that
can
accept
input
both
from
a
user
via
the
x
connection
and
from
some
other
file
descriptor
but
which
operates
efficiently
and
without
blocking
on
either
the
x
connection
or
the
other
file
descriptor
a
solution
is
use
xtappaddinput
after
you
open
your
file
descriptor
use
xtappaddinput
to
register
an
input
handler
the
input
handler
will
be
called
every
time
there
is
something
on
the
file
descriptor
requiring
your
programs
attention
write
the
input
handler
like
you
would
any
other
xt
callback
so
it
does
its
work
quickly
and
returns
it
is
important
to
use
only
nonblocking
io
system
calls
in
your
input
handlers
most
input
handlers
read
the
file
descriptor
although
you
can
have
an
input
handler
write
or
handle
exception
conditions
if
you
wish
be
careful
when
you
register
an
input
handler
to
read
from
a
disk
file
you
will
find
that
the
function
is
called
even
when
there
isnt
input
pending
xtappaddinput
is
actually
working
as
it
is
supposed
to
the
input
handler
is
called
whenever
the
file
descriptor
is
ready
to
be
read
not
only
when
there
is
new
data
to
be
read
a
disk
file
unlike
a
pipe
or
socket
is
almost
always
ready
to
be
read
however
if
only
because
you
can
spin
back
to
the
beginning
and
read
data
youve
read
before
the
result
is
that
your
function
will
almost
always
be
called
every
time
around
xtappmainloop
there
is
a
way
to
get
the
type
of
interaction
you
are
expecting
add
this
line
to
the
beginning
of
your
function
to
test
whether
there
is
new
data
if
ioctlfd
fionread
n
n
return
but
because
this
is
called
frequently
your
application
is
effectively
in
a
busywait
you
may
be
better
off
not
using
xtappaddinput
and
instead
setting
a
timer
and
in
the
timer
procedure
checking
the
file
for
input
courtesy
dan
heller
argvoracom
mouselarrymcrcimmcgilledu
ollie
jones
ojpictelcom
subject
how
do
i
simulate
a
button
pressrelease
event
for
a
widget
you
can
do
this
using
xsendevent
its
likely
that
youre
not
setting
the
window
field
in
the
event
which
xt
needs
in
order
to
match
to
the
widget
which
should
receive
the
event
if
youre
sending
events
to
your
own
application
then
you
can
use
xtdispatchevent
instead
this
is
more
efficient
than
xsendevent
in
that
you
avoid
a
roundtrip
to
the
server
depending
on
how
well
the
widget
was
written
you
may
be
able
to
call
its
action
procedures
in
order
to
get
the
effects
you
want
courtesy
mark
a
horstman
subject
why
doesnt
anything
appear
when
i
run
this
simple
program
thewindow
xcreatesimplewindowthedisplay
rootwindowsizehintsxsizehintsy
sizehintswidthsizehintsheightborderwidth
blackpixelthedisplaythescreen
whitepixelthedisplaythescreen
xselectinputthedisplaythewindowexposuremaskbuttonpressmask
buttonreleasemask
xmapwindowthedisplaythewindow
you
are
right
to
map
the
window
before
drawing
into
it
however
the
window
is
not
ready
to
be
drawn
into
until
it
actually
appears
on
the
screen
until
your
application
receives
an
expose
event
drawing
done
before
that
will
generally
not
appear
youll
see
code
like
this
in
many
programs
this
code
would
appear
after
window
was
created
and
mapped
while
done
xnexteventthedisplaytheevent
switch
theeventtype
case
expose
on
expose
events
redraw
break
note
that
there
is
a
second
problem
some
xlib
implementations
dont
set
up
the
default
graphics
context
to
have
correct
foregroundbackground
colors
so
this
program
could
previously
include
this
code
thegcvaluesforegroundblackpixelthedisplaythescreen
eg
thegcvaluesbackgroundwhitepixelthedisplaythescreen
eg
thegc
xcreategcthedisplaythewindow
gcforegroundgcbackgroundthegcvalues
note
the
code
uses
blackpixel
and
whitepixel
to
avoid
assuming
that
is
black
and
is
white
or
viceversa
the
relationship
between
pixels
and
and
the
colors
black
and
white
is
implementationdependent
they
may
be
reversed
or
they
may
not
even
correspond
to
black
and
white
at
all
also
note
that
actually
using
blackpixel
and
whitepixel
is
usually
the
wrong
thing
to
do
in
a
finished
program
as
it
ignores
the
users
preference
for
foreground
and
background
and
also
note
that
you
can
run
into
the
same
situation
in
an
xtbased
program
if
you
draw
into
the
xtwindoww
right
after
it
has
been
realized
it
may
not
yet
have
appeared
subject
what
is
the
difference
between
a
screen
and
a
screen
the
screen
is
an
xlib
structure
which
includes
the
information
about
one
of
the
monitors
or
virtual
monitors
which
a
single
x
display
supports
a
server
can
support
several
independent
screens
they
are
numbered
etc
the
screen
or
screennumber
is
the
second
digit
the
which
can
be
thought
of
as
an
index
into
the
array
of
available
screens
on
this
particular
display
connection
the
macros
which
you
can
use
to
obtain
information
about
the
particular
screen
on
which
your
application
is
running
typically
have
two
forms
one
which
takes
a
screen
and
one
with
takes
both
the
display
and
the
screennumber
in
xtbased
programs
you
typically
use
xtscreenwidget
to
determine
the
screen
on
which
your
application
is
running
if
it
uses
a
single
screen
part
of
the
confusion
may
arise
from
the
fact
that
some
of
the
macros
which
return
characteristics
of
the
screen
have
display
in
the
names
xdisplaywidth
xdisplayheight
etc
subject
can
i
use
c
with
motif
xview
the
header
files
are
compatible
with
c
the
motif
header
files
are
usable
as
is
inside
extern
c
however
the
definition
of
string
in
intrinsich
can
conflict
with
the
libg
or
other
string
class
and
needs
to
be
worked
around
some
other
projects
which
can
help
wwl
a
set
of
c
classes
by
jeandaniel
fekete
to
wrap
x
toolkit
widgets
available
via
anonymous
ftp
from
exportlcsmitedu
as
or
lrilrifr
as
it
works
by
building
a
set
of
c
classes
in
parallel
to
the
class
tree
of
the
widgets
the
c
interviews
toolkit
is
obtainable
via
anonymous
ftp
from
interviewsstanfordedu
interviews
uses
a
boxglue
model
similar
to
that
of
tex
for
constructing
user
interfaces
and
supports
multiple
looks
on
the
user
interfaces
some
of
its
sample
applications
include
a
wysiwig
document
editor
doc
a
macdrawlike
drawing
program
idraw
and
an
interface
builder
ibuild
things
a
class
library
written
at
the
rome
air
force
base
by
the
strategic
air
command
available
as
freeware
on
archive
sites
motif
is
a
publicdomain
library
that
defines
c
class
wrappers
for
motif
it
adds
an
application
class
for
eg
initializing
x
and
also
integrates
wcl
and
the
xbae
widget
set
this
work
was
developed
by
ronald
van
loon
rvlooncvruunl
based
on
x
a
set
of
bindings
done
by
the
university
of
lowell
graphics
research
laboratory
the
current
sources
are
available
from
decuacdeccom
as
the
source
code
examples
for
doug
youngs
objectoriented
programming
with
c
and
osfmotif
isbn
do
not
include
widget
wrappers
but
do
include
a
set
of
classes
that
encapsulates
higherlevel
facilities
commonly
needed
by
motif
or
other
xtbased
applications
check
export
in
ftpcontribyoungctarz
rogue
wave
offers
viewh
for
c
programmers
using
motif
info
or
a
product
called
commonview
by
glockenspiel
ltd
ireland
apparently
is
a
cbased
toolkit
for
multiple
window
systems
including
pm
windows
and
xmotif
xv
is
sold
by
qualix
fax
it
implements
an
interface
from
the
gil
files
that
suns
openwindows
developers
guide
produces
to
xview
wrapper
classes
in
c
uit
is
a
set
of
c
classes
embedding
the
xview
toolkit
it
is
intended
for
use
with
suns
openwindows
developers
guide
builder
tool
sources
are
on
exportmiteduau
as
uittarz
version
was
released
also
of
likely
use
is
objectcenter
saberc
and
a
reasonable
alternative
to
all
of
the
above
is
parcplaces
formerly
solbournes
object
interface
thanks
to
douglas
s
rand
dsrandmitreorg
and
george
wu
subject
where
can
i
obtain
alternate
language
bindings
to
x
versions
of
the
clx
lisp
bindings
are
part
of
the
core
source
distributions
a
version
of
clx
is
on
the
tape
version
is
on
exportlcsmitedu
in
the
saic
bindings
are
through
anonymous
ftp
in
pub
from
starsrosslynunisyscom
there
is
an
xada
study
team
sponsored
by
nasa
jsc
which
apparently
is
working
out
bindings
information
xadaghghoutxus
gnu
smalltalk
has
a
beta
native
smalltalk
binding
to
x
called
stix
by
stevenbyrneengsuncom
it
is
still
in
its
beginning
stages
and
documentation
is
sparse
outside
the
smalltalk
code
itself
the
sources
are
available
as
on
prepaimitedu
or
ugleunitno
prolog
bindings
called
xwip
written
by
ted
kim
at
ucla
while
supported
in
part
by
darpa
are
available
by
anonymous
ftp
from
exportlcsmiteducontribxwiptarz
or
ftpcsuclaedupubxwiptarz
these
prolog
language
bindings
depend
on
having
a
quintustype
foreign
function
interface
in
your
prolog
the
developer
has
gotten
it
to
work
with
quintus
and
sicstus
prolog
inquiries
should
go
to
xwipcsuclaedu
scheme
bindings
to
xlib
osfmotif
and
xaw
are
part
of
the
elk
distribution
version
on
export
obsoletes
the
version
on
the
contrib
tape
xscm
a
bolton
accessory
for
aubrey
jaffers
scm
scheme
interpreter
that
provides
an
interface
to
xlib
motif
and
openlook
is
now
available
via
ftp
from
and
ada
bindings
to
motif
explicitly
will
eventually
be
made
available
by
the
jet
propulsion
laboratories
probably
through
the
normal
electronic
means
advance
information
can
be
obtained
from
dsoulelesdsfvaxjplnasagov
who
may
respond
as
time
permits
adamotif
is
a
complete
binding
to
x
and
motif
for
the
ada
language
for
many
common
systems
it
is
based
in
part
upon
the
saicunisys
bindings
and
also
includes
a
uil
to
ada
translator
info
systems
engineering
research
corporation
wellsercapplecom
also
the
mit
consortium
although
not
involved
in
producing
ada
bindings
for
x
maintains
a
partial
listing
of
people
involved
in
x
and
ada
information
is
available
from
donna
converse
converseexpolcsmitedu
subject
can
xgetwindowattributes
get
a
windows
background
pixelpixmap
no
once
set
the
background
pixel
or
pixmap
of
a
window
cannot
be
reread
by
clients
the
reason
for
this
is
that
a
client
can
create
a
pixmap
set
it
to
be
the
background
pixmap
of
a
window
and
then
free
the
pixmap
the
window
keeps
this
background
but
the
pixmap
itself
is
destroyed
if
youre
sure
a
window
has
a
background
pixel
not
a
pixmap
you
can
use
xcleararea
to
clear
a
region
to
the
background
color
and
then
use
xgetimage
to
read
back
that
pixel
however
this
action
alters
the
contents
of
the
window
and
it
suffers
from
race
conditions
with
exposures
courtesy
dave
lemke
of
ncd
and
stuart
marks
of
sun
note
that
the
same
applies
to
the
border
pixelpixmap
this
is
a
misfeature
of
the
protocol
which
allows
the
server
is
free
to
manipulate
the
pixelpixmap
however
it
wants
by
not
requiring
the
server
to
keep
the
original
pixel
or
pixmap
some
potentially
a
lot
of
space
can
be
saved
courtesy
jim
fulton
mit
x
consortium
subject
how
do
i
create
a
transparent
window
a
completely
transparent
window
is
easy
to
get
use
an
inputonly
window
in
order
to
create
a
window
which
is
mostly
transparent
you
have
several
choices
the
shape
extension
first
released
with
offers
an
easy
way
to
make
nonrectangular
windows
so
you
can
set
the
shape
of
the
window
to
fit
the
areas
where
the
window
should
be
nontransparent
however
not
all
servers
support
the
extension
a
machinespecific
method
of
implementing
transparent
windows
for
particular
servers
is
to
use
an
overlay
plane
supported
by
the
hardware
note
that
there
is
no
x
notion
of
a
transparent
color
index
a
generally
portable
solution
is
to
use
a
large
number
of
tiny
windows
but
this
makes
operating
on
the
application
as
a
unit
difficult
a
final
answer
is
to
consider
whether
you
really
need
a
transparent
window
or
if
you
would
be
satisfied
with
being
able
to
overlay
your
application
window
with
information
if
so
you
can
draw
into
separate
bitplanes
in
colors
that
will
appear
properly
thanks
to
der
mouse
mouselightningmcrcimmcgilledu
see
also
the
x
journal
for
a
more
complete
answer
including
code
samples
for
this
last
option
subject
why
doesnt
gxxor
produce
mathematicallycorrect
color
values
when
using
gxxor
you
may
expect
that
drawing
with
a
value
of
black
on
a
background
of
black
for
example
should
produce
white
however
the
drawing
operation
does
not
work
on
rgb
values
but
on
colormap
indices
the
color
that
the
resulting
colormap
index
actually
points
to
is
undefined
and
visually
random
unless
you
have
actually
filled
it
in
yourself
on
many
x
servers
black
and
white
often
or
programs
taking
advantage
of
this
mathematical
coincidence
will
break
if
you
want
to
be
combining
colors
with
gxxor
then
you
should
be
allocating
a
number
of
your
own
color
cells
and
filling
them
with
your
chosen
precomputed
values
if
you
want
to
use
gxxor
simply
to
switch
between
two
colors
then
you
can
take
the
shortcut
of
setting
the
background
color
in
the
gc
graphics
context
to
and
the
foreground
color
to
a
value
such
that
when
it
draws
over
red
say
the
result
is
blue
and
when
it
draws
over
blue
the
result
is
red
this
foreground
value
is
itself
the
xor
of
the
colormap
indices
of
red
and
blue
thanks
to
chris
flatters
cflatterziaaocnraoedu
and
ken
whaley
whaleyspectrepadeccom
subject
why
does
every
color
i
allocate
show
up
as
black
make
sure
youre
using
bits
and
not
the
red
green
and
blue
fields
of
an
xcolor
structure
are
scaled
so
that
is
nothing
and
is
fullblast
if
you
forget
to
scale
using
for
example
for
each
color
the
xalloccolor
function
will
perform
correctly
but
the
resulting
color
is
usually
black
thanks
to
paul
asente
asenteadobecom
subject
why
cant
my
program
get
a
standard
colormap
i
have
an
imageprocessing
program
which
uses
xgetrgbcolormap
to
get
the
standard
colormap
but
it
doesnt
work
xgetrgbcolormap
when
used
with
the
property
xargbdefaultmap
does
not
create
a
standard
colormap
it
just
returns
one
if
one
already
exists
use
xstdcmap
or
do
what
it
does
in
order
to
create
the
standard
colormap
first
from
der
mouse
mouselarrymcrcimmcgilledu
subject
why
does
the
pixmap
i
copy
to
the
screen
show
up
as
garbage
the
initial
contents
of
pixmaps
are
undefined
this
means
that
most
servers
will
allocate
the
memory
and
leave
around
whatever
happens
to
be
there
which
is
usually
garbage
you
probably
want
to
clear
the
pixmap
first
using
xfillrectangle
with
a
function
of
gxcopy
and
a
foreground
pixel
of
whatever
color
you
want
as
your
background
or
if
you
are
using
the
pixmap
as
a
mask
courtesy
dave
lemke
of
ncd
and
stuart
marks
of
sun
subject
how
do
i
check
whether
a
window
id
is
valid
my
program
has
the
id
of
a
window
on
a
remote
display
i
want
to
check
whether
the
window
exists
before
doing
anything
with
it
because
x
is
asynchronous
there
isnt
a
guarantee
that
the
window
would
still
exist
between
the
time
that
you
got
the
id
and
the
time
you
sent
an
event
to
the
window
or
otherwise
manipulated
it
what
you
should
do
is
send
the
event
without
checking
but
install
an
error
handler
to
catch
any
badwindow
errors
which
would
indicate
that
the
window
no
longer
exists
this
scheme
will
work
except
on
the
rare
occasion
that
the
original
window
has
been
destroyed
and
its
id
reallocated
to
another
window
courtesy
ken
lee
kleesynopticscom
subject
can
i
have
two
applications
draw
to
the
same
window
yes
the
x
server
assigns
ids
to
windows
and
other
resources
actually
the
server
assigns
some
bits
the
client
others
and
any
application
that
knows
the
id
can
manipulate
the
resource
almost
any
x
server
resource
except
for
gcs
and
private
color
cells
can
be
shared
the
problem
you
face
is
how
to
disseminate
the
window
id
to
multiple
applications
a
simple
way
to
handle
this
and
which
solves
the
problem
of
the
applications
running
on
different
machines
is
in
the
first
application
to
create
a
speciallynamed
property
on
the
rootwindow
and
put
the
window
id
into
it
the
second
application
then
retrieves
the
property
whose
name
it
also
knows
and
then
can
draw
whatever
it
wants
into
the
window
note
this
scheme
works
iff
there
is
only
one
instance
of
the
first
application
running
and
the
scheme
is
subject
to
the
limitations
mentioned
in
the
question
about
using
window
ids
on
remote
displays
note
also
that
you
will
still
need
to
coordinate
any
higherlevel
cooperation
among
your
applications
note
also
that
two
processes
can
share
a
window
but
should
not
try
to
use
the
same
server
connection
if
one
process
is
a
child
of
the
other
it
should
close
down
the
connection
to
the
server
and
open
its
own
connection
mostly
courtesy
phil
karlton
karltonwpdsgicom
subject
why
cant
my
program
work
with
tvtwm
or
swm
a
number
of
applications
including
xwd
xwininfo
and
xsetroot
do
not
handle
the
virtual
root
window
which
tvtwm
and
swm
use
they
typically
return
the
wrong
child
of
root
a
general
solution
is
to
add
this
code
or
to
use
it
in
your
own
application
where
you
would
normally
use
rootwindowdpyscreen
function
name
getvroot
description
gets
the
root
window
even
if
its
a
virtual
root
arguments
the
display
and
the
screen
returns
the
root
window
for
the
client
include
window
getvrootdpy
scr
display
dpy
int
scr
window
rootreturn
parentreturn
children
unsigned
int
numchildren
window
root
rootwindowdpy
scr
atom
swmvroot
none
int
i
swmvroot
xinternatomdpy
swmvroot
false
xquerytreedpy
root
rootreturn
parentreturn
children
numchildren
for
i
i
numchildren
i
atom
actualtype
int
actualformat
long
nitems
bytesafter
window
newroot
null
if
xgetwindowpropertydpy
childreni
swmvroot
false
xawindow
actualtype
actualformat
nitems
bytesafter
unsigned
char
newroot
success
newroot
root
newroot
break
return
root
courtesy
david
elliott
dcesmscsonycom
similar
code
is
in
ssetroot
a
version
of
xsetroot
distributed
with
tvtwm
a
header
file
by
andreas
stolcke
of
icsi
on
exportlcsmiteducontribvrooth
functions
similarly
by
providing
macros
for
rootwindow
and
defaultrootwindow
code
can
include
this
header
file
first
to
run
properly
in
the
presence
of
a
virtual
desktop
subject
how
do
i
keep
a
window
from
being
resized
by
the
user
resizing
the
window
is
done
through
the
window
manager
window
managers
can
pay
attention
to
the
size
hints
your
application
places
on
the
window
but
there
is
no
guarantee
that
the
window
manager
will
listen
you
can
try
setting
the
minimum
and
maximum
size
hints
to
your
target
size
and
hope
for
the
best
subject
how
do
i
keep
a
window
in
the
foreground
at
all
times
its
rather
antisocial
for
an
application
to
constantly
raise
itself
eg
by
tracking
visibilitynotify
events
so
that
it
isnt
overlapped
imagine
the
conflict
between
two
such
programs
running
the
only
sure
way
to
have
your
window
appear
on
the
top
of
the
stack
is
to
make
the
window
overrideredirect
this
means
that
you
are
temporarily
assuming
windowmanagement
duties
while
the
window
is
up
so
you
want
to
do
this
infrequently
and
then
only
for
short
periods
of
time
eg
for
popup
menus
or
other
short
parametersetting
windows
thanks
to
der
mouse
mouselarrymcrcimmcgilledu
subject
how
do
i
make
text
and
bitmaps
blink
in
x
there
is
no
easy
way
unless
youre
willing
to
depend
on
some
sort
of
extension
as
yet
nonexistent
you
have
to
arrange
for
the
blinking
yourself
either
by
redrawing
the
contents
periodically
or
if
possible
by
playing
games
with
the
colormap
and
changing
the
color
of
the
contents
thanks
to
mouselarrymcrcimmcgilledu
der
mouse
subject
how
do
i
get
a
doubleclick
in
xlib
users
of
xt
have
the
support
of
the
translation
manager
to
help
get
notification
of
doubleclicking
there
is
no
good
way
to
get
only
a
doubleclick
in
xlib
because
the
protocol
does
not
provide
enough
support
to
do
doubleclicks
you
have
to
do
clientside
timeouts
unless
the
singleclick
action
is
such
that
you
can
defer
actually
taking
it
until
you
next
see
an
event
from
the
server
thus
you
have
to
do
timeouts
which
means
systemdependent
code
on
most
unixish
implementations
you
can
use
xconnectionnumber
to
get
the
file
descriptor
of
the
x
connection
and
then
use
select
or
something
similar
on
that
note
that
many
userinterface
references
suggest
that
a
doubleclick
be
used
to
extend
the
action
indicated
by
a
singleclick
if
this
is
the
case
in
your
interface
then
you
can
execute
the
first
action
and
as
a
compromise
check
the
timestamp
on
the
second
event
to
determine
whether
it
too
should
be
the
singleclick
action
or
the
doubleclick
action
thanks
to
mouselarrymcrcimmcgilledu
der
mouse
subject
how
do
i
render
rotated
text
xlib
intentionally
does
not
provide
such
sophisticated
graphics
capabilities
leaving
them
up
to
serverextensions
or
clientsside
graphics
libraries
your
only
choice
if
you
want
to
stay
within
the
core
x
protocol
is
to
render
the
text
into
a
pixmap
read
it
back
via
xgetimage
rotate
it
by
hand
with
whatever
matrices
you
want
and
put
it
back
to
the
server
via
xputimage
more
specifically
create
a
bitmap
b
and
write
your
text
to
it
create
an
xybitmap
image
i
from
b
via
xgetimage
create
an
xybitmap
image
big
enough
to
handle
the
transformation
for
each
xy
in
iab
where
a
x
costheta
y
sintheta
b
x
sintheta
y
costheta
render
note
that
you
should
be
careful
how
you
implement
this
not
to
lose
bits
an
algorithm
based
on
shear
transformations
may
in
fact
be
better
the
highlevel
serverextensions
and
graphics
packages
available
for
x
also
permit
rendering
of
rotated
text
display
postscript
pex
phigs
and
gks
although
most
are
not
capable
of
arbitrary
rotation
and
probably
do
not
use
the
same
fonts
that
would
be
found
on
a
printer
in
addition
if
you
have
enough
access
to
the
server
to
install
a
font
on
it
you
can
create
a
font
which
consists
of
letters
rotated
at
some
predefined
angle
your
application
can
then
itself
figure
out
placement
of
each
glyph
courtesy
der
mouse
mouselarrymcrcimmcgilledu
eric
taylor
etaylorwilkinsbmctmcedu
and
ken
lee
kleesynopticscom
liam
quin
leesqcom
interviews
c
ui
toolkit
in
the
x
contrib
software
has
support
for
rendering
rotated
fonts
in
x
it
could
be
one
source
of
example
code
brian
r
smith
brsmithcsumnedu
another
possibility
is
to
use
the
hershey
fonts
they
are
strokerendered
and
can
be
used
by
x
by
converting
them
into
xdrawline
requests
ericpencomcom
the
xrotfont
program
by
alan
richardson
posted
to
compsourcesx
july
paints
a
rotated
font
by
implementing
the
method
above
and
by
using
an
outline
hershey
font
the
xvertext
package
by
alan
richardson
is
a
set
of
functions
to
facilitate
the
writing
of
text
at
any
angle
version
was
recently
released
to
altsources
and
compsourcesmisc
it
is
also
on
export
as
oreillys
x
resource
volume
includes
information
from
hp
about
modifications
to
the
x
fonts
server
which
provide
for
rotated
and
scaled
text
subject
what
is
the
x
registry
how
do
i
reserve
names
there
are
places
in
the
x
toolkit
in
applications
and
in
the
x
protocol
that
define
and
use
string
names
the
context
is
such
that
conflicts
are
possible
if
different
components
use
the
same
name
for
different
things
the
mit
x
consortium
maintains
a
registry
of
names
in
these
domains
orgainization
names
selection
names
selection
targets
resource
types
application
classes
and
class
extension
record
types
and
several
others
the
list
as
of
is
in
the
directory
mitdocregistry
on
the
tape
it
is
also
available
by
sending
send
docs
registry
to
the
xstuff
mail
server
to
register
names
first
come
first
served
or
to
ask
questions
send
to
xregistryexpolcsmitedu
be
sure
to
include
a
postal
address
for
confirmation
condensed
from
asenteswick
appendix
h
david
b
lewis
faqcraftuunetuunet
just
the
faqs
maam
joe
friday
david
b
lewis
temporarily
at
but
not
speaking
for
visual
inc
day
dblvisualcom
evening
davidcraftuunetuunet
