how
to
see
characterset
from
wchart
we
developed
a
toolkit
running
on
the
x
window
system
the
toolkit
copes
with
any
languages
based
on
facility
as
you
know
there
are
kinds
of
implementation
from
mits
release
xsi
and
ximp
our
original
implementation
of
the
toolkit
uses
xsi
our
toolkit
manages
each
characters
size
based
on
our
own
font
management
system
in
order
to
do
that
the
wchart
typed
character
strings
must
be
decomposed
to
character
sets
this
means
that
if
one
wchart
type
compound
string
with
ascii
and
kanji
mixed
for
example
is
given
each
element
of
the
wchart
array
must
be
checked
its
corresponding
character
set
based
on
a
bit
layout
and
application
environments
locale
in
this
case
if
the
locale
is
japanese
each
wchart
character
will
be
classified
either
to
or
so
we
need
a
function
to
do
this
the
function
must
check
how
many
characters
from
the
top
are
the
same
character
set
and
what
the
character
set
is
we
could
not
find
any
public
function
to
do
that
and
inevitably
used
xsis
internal
functions
to
construct
that
function
the
following
is
the
source
code
of
that
function
decomposecharacterset
this
may
look
like
c
code
but
it
is
really
c
id
iima
exp
iima
ifndef
define
include
extern
int
decomposecharactersetconst
wchart
wcstr
in
int
wclen
in
char
buf
out
int
buflen
inout
int
scannedlen
out
char
charset
out
extern
xmstring
wchartoxmstringconst
wchart
wcstr
extern
xmstringcharset
charsetofwcharconst
wchart
wc
endif
id
iima
exp
include
stdlibh
include
include
xmxmh
include
extern
c
include
define
xwcdecomposeglyphcharset
xxxxwcdecomposeglyphcharset
define
xmbfscs
xxxxmbfscs
define
xmbctidtocsid
xxxxmbctidtocsid
include
xlocaleinth
undef
xwcdecomposeglyphcharset
undef
xmbfscs
undef
xmbctidtocsid
extern
int
xwcdecomposeglyphcharsetxlocale
const
wchart
int
char
int
int
int
extern
charset
xmbfscsxlocale
csid
extern
csid
xmbctidtocsidxlocale
csid
int
decomposecharactersetconst
wchart
wcstr
in
int
wclen
in
char
buf
out
int
buflen
inout
int
scannedlen
out
char
charset
out
xlocale
xlocale
xfallbackconvert
int
ctid
int
status
charset
xcharset
status
xwcdecomposeglyphcharsetxlocale
wcstr
wclen
buf
buflen
scannedlen
ctid
if
status
success
xcharset
xmbfscsxlocale
xmbctidtocsidxlocale
ctid
charset
xcharset
xcharsetcsname
null
else
charset
null
return
status
an
included
file
above
xlocaleinth
is
also
xsi
internal
and
we
copied
the
file
to
the
toolkit
directory
and
compiled
a
serious
issue
occured
when
we
tried
to
compile
a
toolkit
application
on
our
hp
machine
with
its
os
version
of
when
we
tried
to
link
an
application
based
on
our
toolkit
link
errors
occured
saying
that
the
following
functions
are
missing
xmbctidtocsid
code
xmbfscs
code
xwcdecomposeglyphcharset
code
xfallbackconvert
code
we
had
used
mit
release
version
of
and
its
xsi
implementation
until
and
ran
applications
successfully
one
of
the
reasons
to
use
xsi
was
that
because
hp
did
not
release
hps
until
the
os
and
we
had
no
way
to
know
how
hps
would
be
implemented
we
had
hoped
xsis
popularity
and
used
its
internal
functions
the
hps
linker
complains
that
there
are
no
xsi
internal
functions
implemented
we
observe
from
hps
they
used
some
ximp
implementation
but
we
are
not
sure
if
they
used
mits
vanilla
ximp
version
or
their
own
version
of
ximp
and
therefore
finding
just
counter
part
functions
in
mits
ximp
for
xsi
does
not
seem
to
lead
us
a
solution
my
question
and
goal
is
to
know
how
we
can
construct
a
function
like
decomposecharacterset
listed
above
is
there
any
function
to
check
character
set
of
each
element
of
wchart
type
strings
depending
on
locales
if
it
is
a
public
function
that
is
perfect
but
even
if
it
is
not
we
want
to
use
any
internal
functions
in
hps
as
we
did
for
mits
in
order
to
render
a
wchart
type
string
there
must
be
some
machinery
to
judge
character
sets
and
that
is
how
the
proper
fonts
are
selected
for
the
string
we
have
no
way
to
find
out
that
without
any
hps
source
files
we
want
to
know
how
we
can
use
that
for
our
goal
any
help
or
comments
would
be
highly
appreciated
i
also
appreciate
if
anyone
tell
me
about
ximp
treating
around
this
area
even
if
it
is
not
hps
implementation
thank
you
takeshi
inoue
inouecrdyokogawacojp
yokogawa
electric
corporation
open
systems
laboratory
