re
repost
acceleratorstranslations
in
sdennisosforg
writes
i
posted
this
a
while
ago
and
didnt
receive
one
reply
and
now
we
have
another
bug
report
on
the
same
subject
can
anybody
help
me
out
the
problem
is
that
motif
uses
xgrabkey
to
implement
menu
accelerators
and
these
grabs
are
specific
about
which
modifiers
apply
unfortunately
the
specification
for
xgrabkey
doesnt
allow
anymodifier
to
be
combined
with
other
modifiers
which
is
exactly
what
would
be
desired
in
this
case
ctrl
anykeyq
in
ora
vol
in
the
section
on
accelerators
it
says
for
information
on
how
to
specify
translation
tables
see
vol
this
is
so
you
know
what
to
put
for
the
xmnaccelerator
resource
if
you
go
to
vol
it
says
likewise
if
a
modifier
is
specified
there
is
nothing
to
prohibit
other
modifiers
from
being
present
as
well
for
example
the
translation
shiftkeyq
quit
will
take
effect
even
if
the
ctrl
key
is
held
down
at
the
same
time
as
the
shift
key
and
the
q
key
this
is
true
for
accelerators
and
mnemonics
which
are
implemented
using
event
handlers
instead
of
grabs
its
not
true
for
menu
accelerators
if
youre
a
motif
implementor
id
suggest
lobbying
to
get
the
xlib
semantics
changed
to
support
the
feature
i
described
above
otherwise
change
the
documentation
for
menu
accelerators
to
properly
set
the
users
expectations
because
menu
accelerators
are
not
the
same
thing
as
translations
is
it
possible
to
supply
accelerator
for
a
menu
entry
if
you
mean
menu
accelerator
no
its
not
possible
thats
according
to
the
definition
of
the
xmnaccelerator
resource
in
the
xmlabel
manual
page
keep
in
mind
when
answering
this
question
that
when
using
motif
you
cant
use
xtinstallaccelerators
i
cant
think
of
a
reason
why
not
how
can
you
ensure
that
accelerators
work
the
same
independent
of
case
what
i
want
is
ctrlo
and
ctrlo
to
both
be
accelerators
on
one
menu
entry
there
is
a
workaround
for
motif
users
in
addition
to
the
normal
menu
accelerator
you
install
on
the
xmpushbuttongadget
set
an
xtnaccelerators
resource
on
the
shell
toplevel
or
application
install
the
shells
accelerators
on
itself
and
all
of
its
descendants
with
xtinstallallaccelerators
shell
shell
for
example
applicationshell
mainwindow
menubar
filecascade
filepulldown
openpushbutton
exitpushbutton
openpushbuttonaccelerator
ctrlkeyo
openpushbuttonacceleratortext
ctrlo
exitpushbuttonaccelerator
ctrlkeyq
exitpushbuttonacceleratortext
ctrlq
applicationshellaccelerators
overriden
ctrlkeyo
performactionopenpushbutton
armandactivaten
ctrlkeyq
performactionexitpushbutton
armandactivate
you
have
to
write
and
add
the
application
action
performaction
which
you
can
implement
by
using
xtnametowidget
on
the
first
argument
and
then
xtcallactionproc
with
the
rest
of
the
arguments
i
tested
out
something
similar
to
this
to
shorten
development
time
i
used
teleuses
tuninstallaccelerators
resource
to
install
the
accelerators
on
the
shell
and
i
directly
invoked
the
open
and
quit
d
actions
instead
of
asking
the
pushbuttons
to
do
it
for
me
but
the
more
general
approach
i
described
above
should
work
trevor
bourget
trevortelesoftcom
