subject
help
needed
hello
hope
somebody
help
currently
working
project
trying
communicate
ibm
phoenix
bios
using
c
board
made
intel
cpu
uart
chip
board
works
fine
transmit
command
terminal
emulation
mode
kermit
seems
something
wrong
initialization
protocol
used
try
c
need
access
unit
built
using
c
sizable
chunk
c
code
using
perform
calculations
operations
difficult
code
assembly
language
included
assembly
code
running
c
code
trying
use
anyone
show
something
blatantly
incorrectly
missing
lack
knowledge
rs
serial
communications
please
email
wrote
assembly
language
wait
character
received
check
x
character
x
received
leds
indicate
two
c
programs
written
nothing
set
com
port
send
x
character
one
uses
bioscom
function
biosh
uses
software
interrupt
int
function
dosh
triple
checked
baud
rate
parity
none
stop
bits
character
length
bits
interrupt
calls
x
currently
loss
may
wrong
hardware
gurus
want
comment
thanks
alot
hubert
de
jesus
intel
asm
command
equ
h
command
register
porta
equ
h
port
timerlo
equ
h
high
bits
timer
timerhi
equ
h
low
bits
timer
uartdata
equ
eh
uart
data
register
uartcmd
equ
eh
uart
command
register
org
h
sram
location
mvi
ah
set
low
timer
bits
sta
timerlo
mvi
ah
set
high
timer
bits
sta
timerhi
mvi
ab
start
timer
enable
port
sta
command
mvi
ah
display
segment
leds
sta
porta
mvi
ah
clear
uart
command
sta
uartcmd
sta
uartcmd
sta
uartcmd
mvi
ab
internally
reset
uart
sta
uartcmd
lda
uartdata
remove
extraneous
data
mvi
ab
init
uart
data
bits
sta
uartcmd
parity
stop
bit
x
async
mvi
ab
enable
transmit
receive
sta
uartcmd
init
lda
uartcmd
read
status
register
ani
h
rxrdy
jz
init
loop
lda
uartdata
read
data
character
cpi
character
x
jnz
init
loop
mvi
ah
character
received
sta
porta
display
segment
leds
hlt
end
c
using
bioscom
include
stdioh
include
stdlibh
include
biosh
define
init
define
send
define
receive
define
status
define
com
void
main
char
abyte
abyte
xa
bioscom
init
abyte
com
printf
initialized
comm
port
n
bioscom
status
com
x
abyte
bioscom
send
abyte
com
printf
sent
start
charactern
c
using
int
include
stdioh
include
stdlibh
include
dosh
include
biosh
main
union
regs
registers
registershah
x
registershal
xa
registersxdx
x
int
x
registers
registers
printf
com
initializedn
registershah
x
registershal
x
registersxdx
x
int
x
registers
registers
printf
sent
start
charactern
