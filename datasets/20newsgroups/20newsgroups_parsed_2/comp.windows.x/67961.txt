subject
compwindowsx
getting
performance
x
faq
archivename
xfaqspeedups
lastmodified
maximize
performance
x
monthly
posting
compiled
art
mulder
ram
faster
cpus
disk
space
faster
ethernet
standard
responses
hear
ask
improve
performance
workstation
well
hardware
isnt
always
option
wonder
hardware
always
even
necessity
faq
list
collection
suggestions
ideas
different
people
net
best
possible
performance
x
windows
workstation
without
purchasing
hardware
performance
highly
subjective
issue
individual
user
must
balance
speed
versus
features
order
come
personal
decision
therefore
document
expected
contain
many
subjective
opinions
amongst
objective
facts
document
specifically
concerned
x
course
many
factors
affect
performance
workstation
however
outside
scope
document
people
seriously
interested
whole
area
system
performance
might
want
look
oreilly
nutshell
handbook
system
performance
tuning
mike
loukides
imho
contains
wellwritten
comprehensive
treatment
system
performance
im
unaware
similar
books
ed
table
contents
introduction
administrivia
x
faq
window
managers
x
server
server
locking
server
ram
starting
server
fonts
resources
file
define
display
properly
clients
better
clock
x
better
terminal
emulator
x
tuning
client
miscellaneous
suggestions
pretty
pictures
quicker
mouse
programming
thoughts
say
sources
information
author
notes
changed
since
last
issue
new
since
last
issue
introduction
administrivia
document
posted
month
around
th
usenet
news
groups
compwindowsx
newsanswers
companswers
reading
copy
faq
months
old
see
lastmodified
date
probably
locate
latest
edition
since
information
may
outdated
know
get
newsgroups
andor
site
receive
andor
article
already
expired
retrieve
faq
archive
site
exist
several
usenet
faq
archive
sites
find
access
please
see
introduction
newsanswers
newsgroup
posting
newsanswers
main
faq
archive
rtfmmitedu
document
found
pubusenetnewsanswersxfaqspeedups
access
anonymous
ftp
retrieve
sending
mail
message
command
send
usenetnewsanswersxfaqspeedups
message
body
x
faq
david
b
lewis
maintains
informative
well
written
compwindowsx
frequently
asked
questions
document
focus
general
x
information
faq
concentrates
performance
compwindowsx
faq
address
issue
speed
regards
x
server
gist
topic
seems
use
xr
faster
r
please
see
x
faq
complete
details
window
managers
lot
window
managers
lots
different
features
abilities
choice
use
necessity
balancing
act
performance
useful
features
point
respondents
agreed
upon
twm
best
candidate
speedy
window
manager
couple
generic
tricks
try
soup
window
manger
turning
unnecessary
things
like
zooming
opaque
move
also
lay
windows
tiled
manner
reduce
amount
cpu
power
spent
raising
lowering
overlapping
windows
joe
english
ive
found
good
font
tiling
x
aka
miscfixedmediumrnormalciso
biggest
font
know
use
sun
x
screen
still
get
two
column
terminal
windows
sidebyside
display
overlap
font
suggestions
accepted
x
server
server
make
sure
server
proper
match
hardware
monochrome
monitor
use
monochrome
x
server
monochrome
sun
havent
noticed
much
difference
xsun
colour
server
xsunmono
however
pointed
xsunmono
k
smaller
therefore
contribute
less
paging
thanks
jonny
farringdon
michael
salmon
server
compiled
also
make
difference
jeff
law
advises
us
sun
system
x
compiled
gcc
version
unbundled
sun
compiler
expect
get
large
speedups
server
using
bundled
sunos
compiler
assume
similar
results
would
occur
used
one
highquality
commercial
compilers
market
locking
server
ram
anyone
tried
hacking
x
server
locked
ram
get
paged
eg
via
call
plock
help
performance
ive
one
inquiry
topic
pointers
plock
function
call
hard
evidence
someone
whos
tried
position
give
try
thanks
eric
c
claeys
danny
backx
juan
martin
starting
server
joe
english
start
lot
clients
xsession
whatever
sleep
second
two
launching
one
changed
xclients
script
logging
actually
took
less
time
heavily
loaded
system
without
much
core
though
sounds
crazy
confirmed
works
warner
losh
provided
good
explanation
works
summarized
start
x
server
takes
huge
amount
time
start
accepting
connections
lot
initialization
done
server
starts
process
touches
large
number
pages
process
running
time
would
fight
server
use
cpu
importantly
memory
put
sleep
give
server
chance
get
sorted
clients
start
similarly
also
lot
initialization
whenever
x
client
program
starts
toolkits
registering
widgets
resources
fetched
programs
initializing
state
databases
forth
activity
typically
memory
intensive
initialization
done
process
reached
steady
state
memory
usage
typically
settles
using
pages
using
sleeps
stagger
launching
clients
xinitrc
avoid
fighting
workstations
limited
resources
definitely
mileage
may
vary
situation
many
variables
considered
available
ram
local
swap
space
load
average
number
users
system
clients
starting
etc
currently
xinitrc
situation
like
sleep
exec
xclock
sleep
exec
xbiff
sleep
exec
xterm
sleep
exec
xterm
ive
experimented
sleep
exec
xclock
sleep
exec
xbiff
sleep
exec
xterm
sleep
exec
xterm
ive
even
tried
sleep
exec
startxclientsscript
startxclientsscript
sleep
exec
xclock
sleep
exec
xbiff
sleep
exec
xterm
sleep
exec
xterm
idea
last
one
make
sure
xinit
completely
finished
processing
xinitrc
settled
steady
state
sleep
expired
clients
launched
yielded
fairly
comparable
results
stuck
current
setup
simplicity
probably
experiment
bit
find
setup
suits
fonts
loading
fonts
takes
time
ram
minimize
number
fonts
applications
use
youll
get
speed
increases
loadup
time
one
simple
strategy
choose
small
number
fonts
one
small
one
large
one
roman
whatever
suits
configure
clients
least
heavily
used
clients
use
fonts
client
programs
start
quicker
font
already
loaded
server
also
conserve
server
resources
since
fewer
fonts
loaded
server
farrell
mckay
joe
english
eg
main
xterm
font
x
also
twm
set
use
x
menus
icons
etc
twms
default
font
x
since
dont
normally
use
x
ive
eliminated
one
font
server
oliver
jones
keep
fonts
local
workstation
rather
loading
nfs
make
extensive
use
r
scalable
fonts
use
font
server
resources
file
keep
xresources
xdefaults
file
small
saves
ram
saves
server
startup
time
joe
english
one
suggestion
xdefaults
xresources
file
try
putting
minimum
number
resources
want
available
applications
example
reversevideo
true
separate
resources
individual
clientspecific
resource
files
example
homelibappdefaults
login
file
set
environment
variable
xuserfilesearchpath
setenv
xuserfilesearchpath
homelibappdefaultsn
compwindowsx
frequently
asked
questions
faq
contains
excellent
explanation
environment
variables
work
ed
xterm
launches
loads
resources
appdefaultsxterm
xdvi
finds
appdefaultsxdvi
forth
note
clients
follow
xxxxx
resourcefile
naming
pattern
check
system
appdefaults
directory
often
usrxrlibxappdefaults
find
proper
name
name
personal
resource
files
name
documented
xt
specification
pg
thanks
kevin
samborn
michael
urban
mike
long
kevin
willing
mail
setup
files
inquirers
method
organizing
personal
resources
following
benefits
easier
maintain
usable
fewer
resources
stored
x
server
resourcemanager
property
side
benefit
server
may
start
fractionally
quicker
since
doesnt
load
resources
applications
process
resources
never
sort
resources
find
ones
affect
also
drawbacks
application
interested
load
additional
file
every
time
starts
doesnt
seem
make
much
performance
difference
might
consider
huge
boon
usability
modifying
applications
resource
database
need
rerun
application
without
xrdb
xrdb
default
run
xdefaults
file
cpp
resources
split
multiple
resource
files
loaded
individual
client
programs
watch
c
style
comments
xdefaults
file
cpp
stripped
switched
method
distributed
resource
files
spent
several
frustrating
days
trying
figure
clients
finding
resources
xt
provide
error
message
encountered
c
style
comments
resource
files
simply
silently
aborted
processing
resource
file
loss
preprocessing
handy
eg
ifdef
color
enough
cause
people
dismiss
method
resource
management
may
also
run
clients
break
rules
example
neither
emacs
xvt
find
resources
anywhere
xdefaults
starting
client
machine
share
files
machine
resources
stored
client
find
resources
loading
resources
server
guarantee
clients
always
find
resources
casey
leedom
possible
compromise
suggestion
planning
trying
put
resources
heavily
used
clients
eg
xterm
xdefaults
file
use
separate
resources
files
method
clients
seldom
use
define
display
properly
client
programs
often
executed
machine
server
situation
rather
setting
display
environment
variable
hostname
hostname
name
workstation
set
display
variable
unix
access
optimized
routines
know
server
machine
use
shared
memory
method
transferring
requests
thanks
patrick
j
horgan
see
display
names
section
x
man
page
explanation
properly
set
display
name
dont
think
stock
mit
least
data
general
hp
libraries
smart
enough
use
local
communication
even
display
isnt
set
specially
rob
sartin
jody
goldberg
sent
xlib
patch
change
stock
r
use
local
communication
even
display
properly
set
dont
want
get
business
distributing
trying
juggle
nonmit
patches
elected
include
hopefully
mit
apply
minor
lines
patch
meantime
want
try
email
jody
ed
clients
megabytes
ram
think
carefully
number
programs
running
think
also
kind
programs
running
example
smaller
clock
program
xclock
unfortunately
havent
really
noticed
programs
advertise
large
onus
us
research
spread
word
suggestions
better
alternatives
standard
clients
eg
xclock
xterm
xbiff
welcome
ed
ive
received
contradictory
advice
people
subject
x
client
programs
advocate
use
programs
strictly
xlib
based
since
xt
xaw
toolkits
rather
large
others
warn
us
applications
using
may
already
loaded
one
shared
libraries
case
using
nonxt
example
client
program
may
actually
increase
amount
ram
consumed
upshot
seems
dont
mix
toolkits
try
use
athena
clients
xview
clients
motif
clients
etc
use
one
youre
dragging
one
toolkit
library
know
environment
think
carefully
client
programs
would
work
best
together
environment
thanks
rob
sartin
duncan
sinclair
better
clock
x
xcuckoo
suggested
duncan
sinclair
available
exportlcsmitedu
xcuckoo
displays
clock
title
bar
another
program
saves
screen
real
estate
mclock
suggested
der
mouse
available
larrymcrcimmcgilledu
xmclockshar
non
xtbased
extensively
configurable
made
look
much
like
mit
oclock
mostly
like
xclock
purely
changing
resources
course
ultimate
clock
one
consumes
resources
takes
screen
real
estate
one
hangs
wall
better
terminal
emulator
x
readme
file
distributed
xterm
abandon
hope
ye
enter
undoubtedly
ugly
program
distribution
ugly
maybe
site
still
used
suspect
xterm
one
used
clients
many
sites
laziness
isnt
better
terminal
emulator
available
see
must
use
xterm
try
reducing
number
savelines
reduce
memory
usage
oliver
jones
jonny
farringdon
xvt
suggested
richard
hesketh
available
exportlcsmitedu
contribxvttarz
dont
need
esoteric
features
xterm
get
hold
xvt
written
save
swap
space
xterm
rather
hog
written
partial
clone
xterm
dont
rename
resources
xvt
pretends
xterm
current
version
bind
keys
xterm
ive
heard
versions
xvt
feature
ive
found
yet
update
march
recently
email
conversations
brian
warkentin
regarding
xvt
questions
whether
xvt
really
faster
xterm
instance
xvt
may
initialize
slightly
faster
compare
scrolling
speed
try
quickie
benchmark
bintime
dd
ifetctermcap
bs
see
program
scroll
faster
also
xterm
may
slightly
larger
ram
requirements
dont
hard
numbers
anyone
else
shared
libraries
shared
text
segments
mean
xterms
paging
requirements
major
experiment
ripped
tek
stuff
xterm
made
little
difference
since
never
use
never
gets
brought
memory
stand
conflicting
reports
validity
xvt
xterm
summary
caveat
emptor
mileage
may
vary
provide
hard
data
id
like
see
specifically
much
ram
occupies
much
swap
needs
relative
speed
mterm
suggested
der
mouse
available
larrymcrcimmcgilledu
xmtermsrcmtermballowax
also
terminal
emulator
major
lack
scrollback
people
like
anyway
tuning
client
suggestions
tune
client
programs
work
faster
scott
barman
comes
suggestion
regarding
motif
text
field
widgets
noticed
data
entry
motif
text
field
widgets
getting
slight
lag
response
keystrokes
particularly
initial
one
field
examining
going
xscope
found
seems
resource
xmnblinkrate
nonzero
focus
text
field
widget
even
text
widget
ibeam
cursor
blink
every
time
cursor
appears
disappears
widgets
widget
code
making
request
server
copyarea
user
stop
setting
resource
xmnblinkrate
noticeable
mhz
sparc
make
little
difference
slower
system
specific
suggestion
probably
applied
general
lots
areas
consider
heavily
used
clients
minor
embellishments
turned
thereby
save
server
requests
miscellaneous
suggestions
pretty
pictures
dont
use
large
bitmaps
gifs
etc
root
window
backgrounds
complicated
root
window
bitmap
slower
server
redrawing
screen
reposition
windows
redraw
etc
take
ram
cpu
power
work
sun
sparc
im
conscious
performance
issues
cant
comprehend
see
people
mb
sun
running
xphoon
root
window
ill
let
someone
else
figure
much
ram
would
occupied
full
screen
root
image
colour
workstation
youre
anything
like
need
screen
real
estate
get
clients
rarely
see
root
window
anyway
thanks
qiang
alex
zhao
reminding
one
ed
quicker
mouse
using
xset
adjust
fast
pointer
moves
screen
move
mouse
use
xset
xinitrc
file
lets
send
pointer
across
screen
flick
wrist
see
xset
man
page
ideas
information
hint
sometimes
may
want
slow
mouse
tracking
fine
work
cover
options
placed
number
different
mouse
setting
commands
menu
window
manager
eg
twm
menu
mouse
settings
mouse
settings
ftitle
fast
xset
normal
fast
xset
system
default
unaccelerated
xset
default
glacial
xset
programming
thoughts
joe
english
speed
applications
youre
developing
tons
things
stick
motif
programs
dont
set
xmfontlist
resources
individual
buttons
labels
lists
et
al
use
defaultfontlist
labelfontlist
whatever
resource
highestlevel
manager
widget
stick
fonts
possible
better
yet
dont
use
motif
absolute
pig
dont
create
destroy
widgets
fly
try
reuse
avoid
many
problems
buggy
toolkits
use
line
width
gcs
servers
makes
huge
difference
compress
collapse
multiple
expose
events
make
difference
fast
application
completely
unusable
one
francois
staes
small
remark
heard
using
better
malloc
function
would
greatly
increase
performance
xt
based
applications
since
use
malloc
heavily
suggested
trying
gnuy
malloc
didnt
find
time
yet
tests
small
programs
malloc
free
differences
indeed
noticeable
somewhat
times
faster
confirmation
anyone
ed
andre
beck
unnecessary
noexpose
events
people
use
xcopyareaxcopyplane
fastest
blit
routines
forget
reset
graphicsexposures
gc
used
blits
cause
noexpose
event
every
blit
cases
puts
load
onto
connection
forces
client
run
eventloop
thousands
xchangegc
requests
gfx
context
switching
also
seen
handcoded
xapps
one
gcs
created
heavily
changed
xt
uses
definitely
better
mechanism
caching
sharing
lot
gcs
needed
parameters
remove
load
subsequent
xchangegc
requests
connection
moving
toward
client
startup
phase
say
contributors
proposed
ideas
seem
right
wall
first
david
b
lewis
day
night
swap
displays
someone
else
run
programs
machine
display
locally
user
runs
machine
onto
display
goal
reduce
context
switches
operation
client
server
im
situation
easily
try
received
following
confirmation
michael
salmon
regularly
run
programs
machines
notice
big
difference
try
run
machine
reduce
net
usage
usually
nice
reduce
impact
intrusion
helps
lot
poor
little
ss
mb
essential
mb
casey
leedom
x
server
client
competing
cpu
server
run
machine
really
major
problem
except
x
client
server
absolute
synchronicity
context
thrashing
timothy
h
panton
firstly
relies
fact
cpus
mostly
idle
xs
cpu
usage
bursty
chances
teammate
something
cpuintensive
time
small
get
twice
cpumemory
available
action
second
factor
context
switches
expensive
using
cpus
halves
pay
price
due
overhead
going
network
offset
cases
improved
buffering
network
typically
k
vs
k
pipe
allowing
even
fewer
context
switches
sources
information
volume
oreillys
x
window
system
series
x
window
system
administrators
guide
book
x
administrators
read
adrian
nye
lot
tips
performance
paper
improving
x
application
performance
chris
peterson
sharon
chang
issue
x
resource
earlier
version
paper
appeared
xhibition
conference
proceedings
paper
absolutely
essential
reading
x
programmers
author
notes
list
currently
maintained
art
mulder
suggestions
corrections
submission
inclusion
list
gladly
accepted
layout
suggestions
comments
spelling
mistaks
also
welcome
currently
listed
contributors
various
comments
suggestions
want
credited
please
tell
speedupxfaq
copyright
c
arthur
e
mulder
may
copy
document
whole
part
long
dont
try
make
money
pretend
wrote
art
mulder
conformed
world
department
computing
science
transformed
renewal
university
alberta
edmonton
canada
mind
romans
