subject
compwindowsx
frequently
asked
questions
faq
archivename
xfaqpart
lastmodified
subject
im
writing
widget
cant
use
float
resource
value
float
resources
portable
size
value
may
larger
size
xtpointer
try
using
pointer
float
instead
xaw
scrollbar
float
resources
handled
way
subject
memory
leak
xr
xtdestroywidget
yes
unofficial
fix
xr
destroyc
destroyc
thu
jul
libxtdestroyc
thu
jul
xconsortium
destroycv
swick
exp
plus
unofficial
patches
revisions
copyright
digital
equipment
corporation
maynard
massachusetts
int
destroyrec
dr
appdestroylist
appdestroycount
drdispatchlevel
dispatchlevel
widget
w
drwidget
appdestroycount
bcopy
chardr
chardr
appdestroycountsizeofdestroyrec
xtphasedestroyw
else
dr
int
destroyrec
dr
appdestroycount
xtphasedestroy
result
calls
xtdestroywidget
could
cause
appdestroylist
reallocated
dr
appdestroylist
drdispatchlevel
dispatchlevel
widget
w
drwidget
appdestroycount
bcopy
chardr
chardr
appdestroycount
sizeofdestroyrec
xtphasedestroyw
else
donna
converse
subject
callbacks
guaranteed
called
order
registered
although
books
demonstrate
current
implementation
xt
happens
call
callback
procedures
order
registered
specification
guarantee
sequence
supplemental
authoritative
documents
ie
asenteswick
volume
say
order
undefined
callback
list
manipulated
widget
application
xt
guarantee
order
execution
general
callback
procedures
thought
operating
independently
one
another
depend
sideeffects
callbacks
operating
seqence
needed
single
callback
registered
explicitly
call
functions
necessary
thanks
subject
doesnt
xtdestroywidget
actually
destroy
widget
xtdestroywidget
operates
two
passes
order
avoid
leaving
dangling
data
structures
functioncall
marks
widget
actually
destroyed
program
returns
eventloop
subject
query
user
synchronously
using
xt
possible
code
looks
like
trivial
callback
clear
flow
control
calls
askuser
block
answer
set
one
valid
values
yes
answer
code
drops
callback
back
eventprocessing
loop
void
quitwidget
w
xtpointer
client
xtpointer
call
int
answer
answer
askuserw
really
quit
retyes
answer
answer
askuserw
really
positive
retyes
answer
exit
realistic
example
might
ask
whether
create
file
whether
overwrite
accomplished
entering
second
eventprocessing
loop
waiting
user
answers
question
answer
returned
calling
function
function
askuser
looks
something
like
motif
replaced
widgetsetspecific
code
create
sort
dialogbox
displaying
question
string
buttons
ok
cancel
help
equivalents
int
askuserw
string
widget
w
char
string
int
answerretnone
notused
marker
widget
dialog
could
cachecarry
arg
args
int
n
xtappcontext
context
n
xtsetargargsn
xmnmessagestring
xmstringcreateltorstring
xmstringdefaultcharset
n
xtsetargargsn
xmndialogstyle
xmdialogapplicationmodal
n
dialog
xmcreatequestiondialogxtparentw
string
args
n
xtaddcallbackdialog
xmnokcallback
response
answer
xtaddcallbackdialog
xmncancelcallback
response
answer
xtaddcallbackdialog
xmnhelpcallback
response
answer
xtmanagechilddialog
context
xtwidgettoapplicationcontext
w
answer
retnone
xtapppendingcontext
xtappprocessevent
context
xtimall
xtdestroywidgetdialog
blow
away
dialog
box
shell
return
answer
dialog
supports
three
buttons
set
call
function
tickled
user
variable
answer
set
user
finally
selects
one
choices
void
responsew
client
call
widget
w
xtpointer
client
xtpointer
call
int
answer
int
client
xmanycallbackstruct
reason
xmanycallbackstruct
call
switch
reasonreason
case
xmcrok
answer
retyes
define
value
break
case
xmcrcancel
answer
retno
break
case
xmcrhelp
answer
rethelp
break
default
return
code
unwraps
back
point
answer
needed
continues
thanks
dan
heller
code
dans
rcontrib
widgetwrap
library
subject
determine
name
existing
widget
widget
id
need
know
name
widget
users
r
later
best
using
xtname
function
work
widgets
nonwidget
objects
still
using
r
use
simple
bit
code
want
note
depends
widgets
internal
data
structures
necessarily
portable
future
versions
xt
including
r
include
xcoreph
include
xxresourceh
string
xtname
widget
widget
widget
work
nonwidget
objects
return
xrmnametostringwidgetcorexrmname
modified
suggestion
larry
rogers
subject
get
baddrawable
error
drawing
xtwindowwidget
im
order
get
window
xlib
graphics
within
xtbased
program
canvas
xtcreatemanagedwidget
widgetclass
drawing
area
window
xtwindowcanvas
get
window
associated
widget
xdrawline
window
produces
error
window
associated
widget
created
part
realization
widget
using
window
id
null
window
could
create
error
describe
necessary
call
xtrealizewidget
attempting
use
window
associated
widget
note
window
created
xtrealizewidget
call
server
may
actually
mapped
yet
also
wait
expose
event
window
drawing
subject
get
badmatch
error
calling
xgetimage
badmatch
error
occur
specified
rectangle
goes
edge
screen
dont
want
catch
error
deal
take
following
steps
avoid
error
make
pixmap
size
rectangle
want
capture
clear
pixmap
background
using
xfillrectangle
use
xcopyarea
copy
window
pixmap
get
noexpose
event
copy
clean
use
xgetimage
grab
image
pixmap
get
one
graphicsexpose
events
copy
wasnt
clean
xywidthheight
members
graphicsexpose
event
structures
tell
parts
pixmap
arent
good
get
rid
pixmap
probably
takes
lot
memory
thanks
oliver
jones
subject
application
tell
run
x
number
programs
offer
x
modes
otherwise
run
straight
characteronly
mode
easiest
way
application
determine
running
x
display
attempt
open
connection
x
server
display
xopendisplaydisplayname
display
x
stuff
else
curses
something
else
displayname
either
string
specified
commandline
following
display
convention
otherwise
charnull
case
xopendisplay
uses
value
display
set
superior
simply
checking
existence
display
commandline
argument
checking
display
set
environment
neither
adequate
subject
make
busy
cursor
application
computing
necessary
call
xdefinecursor
every
window
application
easiest
thing
create
single
inputonly
window
large
largest
possible
screen
make
child
toplevel
window
clipped
window
wont
affect
application
needs
big
largest
possible
screen
case
user
enlarges
window
busy
moves
elsewhere
within
virtual
desktop
substitute
toplevel
topmost
widget
similar
code
work
xlibonly
applications
use
top
window
unsigned
long
valuemask
xsetwindowattributes
attributes
ignore
device
events
busy
cursor
displayed
valuemask
cwdontpropagate
cwcursor
attributesdonotpropagatemask
keypressmask
keyreleasemask
buttonpressmask
buttonreleasemask
pointermotionmask
attributescursor
xcreatefontcursorxtdisplaytoplevel
xcwatch
window
big
display
screen
clipped
parent
window
never
worry
resizing
xcreatewindowxtdisplaytoplevel
xtwindowtoplevel
unsigned
int
inputonly
copyfromparent
valuemask
attributes
maximum
size
could
replaced
real
size
screen
particularly
avoid
servers
problems
windows
larger
want
use
busy
cursor
map
raise
window
go
back
normal
unmap
automatically
keep
getting
extra
mouse
events
depending
precisely
window
manager
works
may
may
similar
effect
keystrokes
well
addition
note
also
xaw
widgets
support
xtncursor
resource
temporarily
reset
merely
wish
change
cursor
without
blocking
pointer
events
thanks
andrew
wason
dan
heller
subject
fork
without
hanging
parent
x
program
xbased
application
spawns
unix
processes
continue
run
closed
typically
vanish
children
terminated
children
inherit
parent
open
x
connection
display
need
fork
immediately
child
process
close
connectionnumberxtdisplaywidget
close
filedescriptor
display
information
exec
able
exit
parent
alternatively
execing
make
call
causes
file
descriptor
closed
exec
void
fcntlconnectionnumberxdisplay
fsetfd
thanks
janet
anstett
gordon
freedman
greg
holmberg
subject
make
xt
xlib
calls
signal
handler
xlib
xt
mutual
exclusion
protecting
critical
sections
signal
handler
makes
call
wrong
time
might
function
calling
already
executing
leave
library
inconsistent
state
note
ansi
c
standard
points
behavior
signal
handler
undefined
signal
handler
calls
function
signal
problem
specific
xlib
xt
posix
specification
mentions
functions
may
called
safely
may
assumed
functions
called
xlib
xt
functions
work
around
problem
setting
flag
interrupt
handler
later
checking
work
procedure
timer
event
previously
added
note
article
x
journal
example
oreilly
volume
error
thanks
pete
ware
donna
converse
subject
xlib
sequence
lost
errors
may
see
errors
issue
xlib
requests
xlib
error
handler
likely
make
calls
generate
x
requests
xt
xlib
signal
handler
shouldnt
case
subject
xt
program
handle
socket
pipe
file
input
common
need
write
xt
program
accept
input
user
via
x
connection
file
descriptor
operates
efficiently
without
blocking
either
x
connection
file
descriptor
solution
use
xtappaddinput
open
file
descriptor
use
xtappaddinput
register
input
handler
input
handler
called
every
time
something
file
descriptor
requiring
programs
attention
write
input
handler
like
would
xt
callback
work
quickly
returns
important
use
nonblocking
io
system
calls
input
handlers
input
handlers
read
file
descriptor
although
input
handler
write
handle
exception
conditions
wish
careful
register
input
handler
read
disk
file
find
function
called
even
isnt
input
pending
xtappaddinput
actually
working
supposed
input
handler
called
whenever
file
descriptor
ready
read
new
data
read
disk
file
unlike
pipe
socket
almost
always
ready
read
however
spin
back
beginning
read
data
youve
read
result
function
almost
always
called
every
time
around
xtappmainloop
way
get
type
interaction
expecting
add
line
beginning
function
test
whether
new
data
ioctlfd
fionread
n
n
return
called
frequently
application
effectively
busywait
may
better
using
xtappaddinput
instead
setting
timer
timer
procedure
checking
file
input
courtesy
dan
heller
ollie
jones
subject
simulate
button
pressrelease
event
widget
using
xsendevent
likely
youre
setting
window
field
event
xt
needs
order
match
widget
receive
event
youre
sending
events
application
use
xtdispatchevent
instead
efficient
xsendevent
avoid
roundtrip
server
depending
well
widget
written
may
able
call
action
procedures
order
get
effects
want
courtesy
mark
horstman
subject
doesnt
anything
appear
run
simple
program
thewindow
xcreatesimplewindowthedisplay
rootwindowsizehintsxsizehintsy
sizehintswidthsizehintsheightborderwidth
blackpixelthedisplaythescreen
whitepixelthedisplaythescreen
xselectinputthedisplaythewindowexposuremaskbuttonpressmask
buttonreleasemask
xmapwindowthedisplaythewindow
xdrawlinethedisplaythewindowthegc
right
map
window
drawing
however
window
ready
drawn
actually
appears
screen
application
receives
expose
event
drawing
done
generally
appear
youll
see
code
like
many
programs
code
would
appear
window
created
mapped
done
xnexteventthedisplaytheevent
switch
theeventtype
case
expose
expose
events
redraw
xdrawlinethedisplaythewindowthegc
break
note
second
problem
xlib
implementations
dont
set
default
graphics
context
correct
foregroundbackground
colors
program
could
previously
include
code
thegcvaluesforegroundblackpixelthedisplaythescreen
eg
thegcvaluesbackgroundwhitepixelthedisplaythescreen
eg
thegc
xcreategcthedisplaythewindow
gcforegroundgcbackgroundthegcvalues
note
code
uses
blackpixel
whitepixel
avoid
assuming
black
white
viceversa
relationship
pixels
colors
black
white
implementationdependent
may
reversed
may
even
correspond
black
white
also
note
actually
using
blackpixel
whitepixel
usually
wrong
thing
finished
program
ignores
users
preference
foreground
background
also
note
run
situation
xtbased
program
draw
xtwindoww
right
realized
may
yet
appeared
subject
difference
screen
screen
screen
xlib
structure
includes
information
one
monitors
virtual
monitors
single
x
display
supports
server
support
several
independent
screens
numbered
unix
unix
unix
etc
screen
screennumber
second
digit
thought
index
array
available
screens
particular
display
connection
macros
use
obtain
information
particular
screen
application
running
typically
two
forms
one
takes
screen
one
takes
display
screennumber
xtbased
programs
typically
use
xtscreenwidget
determine
screen
application
running
uses
single
screen
part
confusion
may
arise
fact
macros
return
characteristics
screen
display
names
xdisplaywidth
xdisplayheight
etc
subject
use
c
x
motif
xview
xr
header
files
compatible
c
motif
header
files
usable
inside
extern
c
however
definition
string
intrinsich
conflict
libg
string
class
needs
worked
around
projects
help
wwl
set
c
classes
jeandaniel
fekete
wrap
x
toolkit
widgets
available
via
anonymous
ftp
exportlcsmitedu
contribwwltarz
lrilrifr
pubwwltarz
works
building
set
c
classes
parallel
class
tree
widgets
c
interviews
toolkit
obtainable
via
anonymous
ftp
interviewsstanfordedu
interviews
uses
boxglue
model
similar
tex
constructing
user
interfaces
supports
multiple
looks
user
interfaces
sample
applications
include
wysiwig
document
editor
doc
macdrawlike
drawing
program
idraw
interface
builder
ibuild
things
class
library
written
rome
air
force
base
strategic
air
command
available
freeware
archive
sites
motif
publicdomain
library
defines
c
class
wrappers
motif
adds
application
class
eg
initializing
x
also
integrates
wcl
xbae
widget
set
work
developed
ronald
van
loon
based
x
set
bindings
done
university
lowell
graphics
research
laboratory
current
sources
available
decuacdeccom
pubxmotifjultarz
source
code
examples
doug
youngs
objectoriented
programming
c
osfmotif
isbn
include
widget
wrappers
include
set
classes
encapsulates
higherlevel
facilities
commonly
needed
motif
xtbased
applications
check
export
ftpcontribyoungctarz
rogue
wave
offers
viewh
c
programmers
using
motif
info
product
called
commonview
glockenspiel
ltd
ireland
apparently
cbased
toolkit
multiple
window
systems
including
pm
windows
xmotif
xv
sold
qualix
fax
implements
interface
gil
files
suns
openwindows
developers
guide
produces
xview
wrapper
classes
c
uit
set
c
classes
embedding
xview
toolkit
intended
use
suns
openwindows
developers
guide
builder
tool
sources
exportmiteduau
uittarz
version
released
also
likely
use
objectcenter
saberc
reasonable
alternative
parcplaces
formerly
solbournes
object
interface
thanks
douglas
rand
george
wu
subject
obtain
alternate
language
bindings
x
versions
clx
lisp
bindings
part
x
core
source
distributions
version
clx
r
tape
version
exportlcsmitedu
contribclxrtarz
saic
adax
bindings
anonymous
ftp
pub
starsrosslynunisyscom
xada
study
team
sponsored
nasa
jsc
apparently
working
bindings
information
gnu
smalltalk
beta
native
smalltalk
binding
x
called
stix
still
beginning
stages
documentation
sparse
outside
smalltalk
code
sources
available
pubgnusmalltalktarz
prepaimitedu
ugleunitno
prolog
bindings
called
xwip
written
ted
kim
ucla
supported
part
darpa
available
anonymous
ftp
exportlcsmiteducontribxwiptarz
ftpcsuclaedupubxwiptarz
prolog
language
bindings
depend
quintustype
foreign
function
interface
prolog
developer
gotten
work
quintus
sicstus
prolog
inquiries
go
scheme
bindings
xlib
osfmotif
xaw
part
elk
distribution
version
export
obsoletes
version
r
contrib
tape
xscm
bolton
accessory
aubrey
jaffers
scm
scheme
interpreter
provides
interface
xlib
motif
openlook
available
via
ftp
altdorfaimiteduarchivescmxscmtarz
nexusyorkucapubschemenewxscmtarz
ada
bindings
motif
explicitly
eventually
made
available
jet
propulsion
laboratories
probably
normal
electronic
means
advance
information
obtained
may
respond
time
permits
adamotif
complete
binding
x
motif
ada
language
many
common
systems
based
part
upon
saicunisys
bindings
also
includes
uil
ada
translator
info
systems
engineering
research
corporation
adaserc
also
mit
consortium
although
involved
producing
ada
bindings
x
maintains
partial
listing
people
involved
x
ada
information
available
donna
converse
subject
xgetwindowattributes
get
windows
background
pixelpixmap
set
background
pixel
pixmap
window
reread
clients
reason
client
create
pixmap
set
background
pixmap
window
free
pixmap
window
keeps
background
pixmap
destroyed
youre
sure
window
background
pixel
pixmap
use
xcleararea
clear
region
background
color
use
xgetimage
read
back
pixel
however
action
alters
contents
window
suffers
race
conditions
exposures
courtesy
dave
lemke
ncd
stuart
marks
sun
note
applies
border
pixelpixmap
misfeature
protocol
allows
server
free
manipulate
pixelpixmap
however
wants
requiring
server
keep
original
pixel
pixmap
potentially
lot
space
saved
courtesy
jim
fulton
mit
x
consortium
subject
create
transparent
window
completely
transparent
window
easy
get
use
inputonly
window
order
create
window
mostly
transparent
several
choices
shape
extension
first
released
xr
offers
easy
way
make
nonrectangular
windows
set
shape
window
fit
areas
window
nontransparent
however
servers
support
extension
machinespecific
method
implementing
transparent
windows
particular
servers
use
overlay
plane
supported
hardware
note
x
notion
transparent
color
index
generally
portable
solution
use
large
number
tiny
windows
makes
operating
application
unit
difficult
final
answer
consider
whether
really
need
transparent
window
would
satisfied
able
overlay
application
window
information
draw
separate
bitplanes
colors
appear
properly
thanks
der
mouse
see
also
x
journal
complete
answer
including
code
samples
last
option
subject
doesnt
gxxor
produce
mathematicallycorrect
color
values
using
gxxor
may
expect
drawing
value
black
background
black
example
produce
white
however
drawing
operation
work
rgb
values
colormap
indices
color
resulting
colormap
index
actually
points
undefined
visually
random
unless
actually
filled
many
x
servers
black
white
often
programs
taking
advantage
mathematical
coincidence
break
want
combining
colors
gxxor
allocating
number
color
cells
filling
chosen
precomputed
values
want
use
gxxor
simply
switch
two
colors
take
shortcut
setting
background
color
gc
graphics
context
foreground
color
value
draws
red
say
result
blue
draws
blue
result
red
foreground
value
xor
colormap
indices
red
blue
thanks
chris
flatters
ken
whaley
subject
every
color
allocate
show
black
make
sure
youre
using
bits
red
green
blue
fields
xcolor
structure
scaled
nothing
fullblast
forget
scale
using
example
color
xalloccolor
function
perform
correctly
resulting
color
usually
black
thanks
paul
asente
subject
cant
program
get
standard
colormap
imageprocessing
program
uses
xgetrgbcolormap
get
standard
colormap
doesnt
work
xgetrgbcolormap
used
property
xargbdefaultmap
create
standard
colormap
returns
one
one
already
exists
use
xstdcmap
order
create
standard
colormap
first
der
mouse
subject
pixmap
copy
screen
show
garbage
initial
contents
pixmaps
undefined
means
servers
allocate
memory
leave
around
whatever
happens
usually
garbage
probably
want
clear
pixmap
first
using
xfillrectangle
function
gxcopy
foreground
pixel
whatever
color
want
background
l
using
pixmap
mask
courtesy
dave
lemke
ncd
stuart
marks
sun
subject
check
whether
window
id
valid
program
id
window
remote
display
want
check
whether
window
exists
anything
x
asynchronous
isnt
guarantee
window
would
still
exist
time
got
id
time
sent
event
window
otherwise
manipulated
send
event
without
checking
install
error
handler
catch
badwindow
errors
would
indicate
window
longer
exists
scheme
work
except
rare
occasion
original
window
destroyed
id
reallocated
another
window
courtesy
ken
lee
subject
two
applications
draw
window
yes
x
server
assigns
ids
windows
resources
actually
server
assigns
bits
client
others
application
knows
id
manipulate
resource
almost
x
server
resource
except
gcs
private
color
cells
shared
problem
face
disseminate
window
id
multiple
applications
simple
way
handle
solves
problem
applications
running
different
machines
first
application
create
speciallynamed
property
rootwindow
put
window
id
second
application
retrieves
property
whose
name
also
knows
draw
whatever
wants
window
note
scheme
works
iff
one
instance
first
application
running
scheme
subject
limitations
mentioned
question
using
window
ids
remote
displays
note
also
still
need
coordinate
higherlevel
cooperation
among
applications
note
also
two
processes
share
window
try
use
server
connection
one
process
child
close
connection
server
open
connection
mostly
courtesy
phil
karlton
subject
cant
program
work
tvtwm
swm
number
applications
including
xwd
xwininfo
xsetroot
handle
virtual
root
window
tvtwm
swm
use
typically
return
wrong
child
root
general
solution
add
code
use
application
would
normally
use
rootwindowdpyscreen
function
name
getvroot
description
gets
root
window
even
virtual
root
arguments
display
screen
returns
root
window
client
include
xxatomh
window
getvrootdpy
scr
display
dpy
int
scr
window
rootreturn
parentreturn
children
unsigned
int
numchildren
window
root
rootwindowdpy
scr
atom
swmvroot
none
int
swmvroot
xinternatomdpy
swmvroot
false
xquerytreedpy
root
rootreturn
parentreturn
children
numchildren
numchildren
atom
actualtype
int
actualformat
long
nitems
bytesafter
window
newroot
null
xgetwindowpropertydpy
childreni
swmvroot
false
xawindow
actualtype
actualformat
nitems
bytesafter
unsigned
char
newroot
success
newroot
root
newroot
break
return
root
courtesy
david
elliott
similar
code
ssetroot
version
xsetroot
distributed
tvtwm
header
file
andreas
stolcke
icsi
exportlcsmiteducontribvrooth
functions
similarly
providing
macros
rootwindow
defaultrootwindow
code
include
header
file
first
run
properly
presence
virtual
desktop
subject
keep
window
resized
user
resizing
window
done
window
manager
window
managers
pay
attention
size
hints
application
places
window
guarantee
window
manager
listen
try
setting
minimum
maximum
size
hints
target
size
hope
best
subject
keep
window
foreground
times
rather
antisocial
application
constantly
raise
eg
tracking
visibilitynotify
events
isnt
overlapped
imagine
conflict
two
programs
running
sure
way
window
appear
top
stack
make
window
overrideredirect
means
temporarily
assuming
windowmanagement
duties
window
want
infrequently
short
periods
time
eg
popup
menus
short
parametersetting
windows
thanks
der
mouse
subject
make
text
bitmaps
blink
x
easy
way
unless
youre
willing
depend
sort
extension
yet
nonexistent
arrange
blinking
either
redrawing
contents
periodically
possible
playing
games
colormap
changing
color
contents
thanks
der
mouse
subject
get
doubleclick
xlib
users
xt
support
translation
manager
help
get
notification
doubleclicking
good
way
get
doubleclick
xlib
protocol
provide
enough
support
doubleclicks
clientside
timeouts
unless
singleclick
action
defer
actually
taking
next
see
event
server
thus
timeouts
means
systemdependent
code
unixish
implementations
use
xconnectionnumber
get
file
descriptor
x
connection
use
select
something
similar
note
many
userinterface
references
suggest
doubleclick
used
extend
action
indicated
singleclick
case
interface
execute
first
action
compromise
check
timestamp
second
event
determine
whether
singleclick
action
doubleclick
action
thanks
der
mouse
subject
render
rotated
text
xlib
intentionally
provide
sophisticated
graphics
capabilities
leaving
serverextensions
clientsside
graphics
libraries
choice
want
stay
within
core
x
protocol
render
text
pixmap
read
back
via
xgetimage
rotate
hand
whatever
matrices
want
put
back
server
via
xputimage
specifically
create
bitmap
b
write
text
create
xybitmap
image
b
via
xgetimage
create
xybitmap
image
big
enough
handle
transformation
xy
ixy
iab
x
costheta
sintheta
b
x
sintheta
costheta
render
note
careful
implement
lose
bits
algorithm
based
shear
transformations
may
fact
better
highlevel
serverextensions
graphics
packages
available
x
also
permit
rendering
rotated
text
display
postscript
pex
phigs
gks
although
capable
arbitrary
rotation
probably
use
fonts
would
found
printer
addition
enough
access
server
install
font
create
font
consists
letters
rotated
predefined
angle
application
figure
placement
glyph
courtesy
der
mouse
eric
taylor
ken
lee
liam
quin
interviews
c
ui
toolkit
x
contrib
software
support
rendering
rotated
fonts
x
could
one
source
example
code
brian
r
smith
another
possibility
use
hershey
fonts
strokerendered
used
x
converting
xdrawline
requests
xrotfont
program
alan
richardson
posted
compsourcesx
july
paints
rotated
font
implementing
method
using
outline
hershey
font
xvertext
package
alan
richardson
set
functions
facilitate
writing
text
angle
version
recently
released
altsources
compsourcesmisc
also
export
contribxvertextsharz
oreillys
x
resource
volume
includes
information
hp
modifications
x
fonts
server
provide
rotated
scaled
text
subject
x
registry
reserve
names
places
x
toolkit
applications
x
protocol
define
use
string
names
context
conflicts
possible
different
components
use
name
different
things
mit
x
consortium
maintains
registry
names
domains
orgainization
names
selection
names
selection
targets
resource
types
application
classes
class
extension
record
types
several
others
list
directory
mitdocregistry
r
tape
also
available
sending
send
docs
registry
xstuff
mail
server
register
names
first
come
first
served
ask
questions
send
sure
include
postal
address
confirmation
condensed
asenteswick
appendix
h
david
b
lewis
faqs
maam
joe
friday
david
b
lewis
temporarily
speaking
visual
inc
day
evening
