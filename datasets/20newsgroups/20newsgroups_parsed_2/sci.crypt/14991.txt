subject
lga
ncrypt
source
got
number
requests
code
written
x
asm
borland
tasm
tasm
lgaasm
tlink
lgaasm
code
lga
ncryption
c
nick
nassuphis
code
segment
assume
cscode
dscode
org
h
start
jmp
begin
gas
particle
assigment
bit
particle
moving
east
bit
particle
moving
west
bit
particle
moving
north
bit
particle
moving
south
bit
particle
moving
east
bit
particle
moving
west
bit
particle
moving
north
bit
particle
moving
south
collisiong
rules
gas
rules
e
w
n
ewns
n
e
w
nsew
nibbles
bytes
reflection
rules
swap
bits
along
directions
lookup
table
implements
two
particle
collisions
hpp
lattice
gas
hpprule
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
rule
implements
velocityreversal
needed
run
gas
evolution
reverse
called
wallrule
particles
hit
wall
head
wallrule
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
maxbyte
equ
lineno
equ
srcptr
dw
offset
buffer
desptr
dw
offset
buffer
savebuff
db
maxbytelineno
dup
buffer
db
maxbytelineno
dup
db
dup
buffer
db
maxbytelineno
dup
db
dup
data
db
db
db
db
test
lattice
gas
based
encryption
db
algorithm
data
encoded
particles
db
digital
gas
whose
time
evolution
simulated
db
cellularautomaton
type
algorithm
decryption
db
achieved
running
simulation
reverse
db
thermodynamic
argument
ensures
even
single
db
bit
flipped
decryption
data
possible
db
db
gas
let
evolve
timesteps
db
one
either
run
reverse
evolution
pressing
db
space
flip
bit
run
pressing
db
db
cryptographic
application
key
would
consist
db
number
time
steps
time
location
db
specific
bit
inversions
db
db
db
db
db
fill
gas
piece
code
initgas
mov
dicssrcptr
mov
sioffset
data
mov
cxlineno
ig
push
di
push
cx
mov
cxmaxbyte
ig
mov
alcssi
mov
csdial
inc
si
inc
di
loop
ig
pop
cx
pop
di
add
dimaxbyte
loop
ig
mov
sicssrcptr
mov
dioffset
initgas
mov
cxmaxbyte
mov
al
lg
mov
byte
ptr
cssial
al
inc
si
loop
lg
ret
display
gas
molecules
bouncing
around
showgas
push
es
push
si
push
di
push
cx
push
bx
mov
axbh
mov
esax
mov
sicssrcptr
mov
di
mov
cxlineno
add
simaxbyte
sg
push
cx
push
di
mov
cxmaxbyte
sg
mov
alcssi
mov
byte
ptr
esdial
inc
si
add
di
dec
cx
jnz
sg
pop
di
pop
cx
add
di
loop
sg
pop
bx
pop
cx
pop
di
pop
si
pop
es
ret
cssi
sourse
data
csdi
destination
data
scanonemiddleline
first
byte
special
case
warparound
mov
bl
al
assembled
byte
mov
bhcssimaxbyte
north
one
line
lower
bhb
bits
blbh
assembled
byte
mov
bhcssimaxbyte
south
one
line
higher
bhb
bits
blbh
place
stuff
al
mov
bhcssimaxbyte
west
one
byte
left
lower
bhb
bits
blbh
mov
bhcssi
east
one
byte
right
higher
bhb
bits
blbh
mov
bh
mov
albyte
ptr
csbx
offset
hpprule
mov
csdial
inc
si
inc
di
middle
bytes
handled
loop
mov
cxmaxbyte
sol
mov
bl
al
assembled
byte
mov
bhcssimaxbyte
north
one
line
lower
bhb
bits
blbh
assembled
byte
mov
bhcssimaxbyte
south
one
line
higher
bhb
bits
blbh
place
stuff
al
mov
bhcssi
west
one
byte
left
lower
bhb
bits
blbh
mov
bhcssi
east
one
byte
right
higher
bhb
bits
blbh
mov
bh
mov
albyte
ptr
csbx
offset
hpprule
mov
csdial
inc
si
inc
di
loop
sol
last
byte
also
special
mov
bl
al
assembled
byte
mov
bhcssimaxbyte
north
one
line
lower
bhb
bits
blbh
assembled
byte
mov
bhcssimaxbyte
south
one
line
higher
bhb
bits
blbh
place
stuff
al
mov
bhcssi
west
one
byte
left
lower
bhb
bits
blbh
mov
bhcssimaxbyte
east
one
byte
right
higher
bhb
bits
blbh
mov
bh
mov
albyte
ptr
csbx
offset
hpprule
mov
csdial
inc
si
inc
di
ret
cssi
sourse
data
csdi
destination
data
scanfirstline
first
byte
special
case
warparound
mov
bl
mov
bhcssimaxbytelineno
bhb
bits
blbh
assembled
byte
mov
bhcssimaxbyte
bhb
bits
blbh
place
stuff
al
mov
bhcssimaxbyte
west
one
byte
left
lower
bhb
bits
blbh
mov
bhcssi
east
one
byte
right
higher
bhb
bits
blbh
mov
bh
mov
albyte
ptr
csbx
offset
hpprule
mov
csdial
inc
si
inc
di
middle
bytes
handled
loop
mov
cxmaxbyte
sfl
mov
bl
al
assembled
byte
mov
bhcssimaxbytelineno
bhb
bits
blbh
assembled
byte
mov
bhcssimaxbyte
bhb
bits
blbh
place
stuff
al
mov
bhcssi
west
one
byte
left
lower
bhb
bits
blbh
mov
bhcssi
east
one
byte
right
higher
bhb
bits
blbh
mov
bh
mov
albyte
ptr
csbx
offset
hpprule
mov
csdial
inc
si
inc
di
loop
sfl
last
byte
also
special
mov
bl
al
assembled
byte
mov
bhcssimaxbytelineno
bhb
bits
blbh
assembled
byte
mov
bhcssimaxbyte
bhb
bits
blbh
place
stuff
al
mov
bhcssi
west
one
byte
left
lower
bhb
bits
blbh
mov
bhcssimaxbyte
east
one
byte
right
higher
bhb
bits
blbh
mov
bh
mov
albyte
ptr
csbx
offset
hpprule
mov
csdial
ret
cssi
sourse
data
csdi
destination
data
scanlastline
first
byte
special
case
warparound
mov
bl
al
assembled
byte
mov
bhcssimaxbyte
bhb
bits
blbh
assembled
byte
mov
bhcssimaxbytelineno
bhb
bits
blbh
place
stuff
al
mov
bhcssimaxbyte
west
one
byte
left
lower
bhb
bits
blbh
mov
bhcssi
east
one
byte
right
higher
bhb
bits
blbh
mov
bh
mov
albyte
ptr
csbx
offset
hpprule
mov
csdial
inc
si
inc
di
middle
bytes
handled
loop
mov
cxmaxbyte
sll
mov
bl
al
assembled
byte
mov
bhcssimaxbyte
bhb
bits
blbh
assembled
byte
mov
bhcssimaxbytelineno
bhb
bits
blbh
place
stuff
al
mov
bhcssi
west
one
byte
left
lower
bhb
bits
blbh
mov
bhcssi
east
one
byte
right
higher
bhb
bits
blbh
mov
bh
mov
albyte
ptr
csbx
offset
hpprule
mov
csdial
inc
si
inc
di
loop
sll
last
byte
also
special
mov
bl
al
assembled
byte
mov
bhcssimaxbyte
bhb
bits
blbh
assembled
byte
mov
bhcssimaxbytelineno
bhb
bits
blbh
place
stuff
al
mov
bhcssi
west
one
byte
left
lower
bhb
bits
blbh
mov
bhcssimaxbyte
east
one
byte
right
higher
bhb
bits
blbh
mov
bh
mov
albyte
ptr
csbx
offset
hpprule
mov
csdial
inc
si
inc
di
ret
invert
velocities
gas
invertall
push
bx
push
cx
push
si
mov
sicssrcptr
mov
bx
mov
cxlineno
ia
push
cx
mov
cxmaxbyte
ia
mov
blcssi
mov
albyte
ptr
csbx
offset
wallrule
mov
cssial
inc
si
loop
ia
pop
cx
loop
ia
pop
si
pop
cx
pop
bx
ret
iterateonce
mov
sicssrcptr
mov
dicsdesptr
mov
cssrcptrdi
mov
csdesptrsi
push
si
push
di
call
scanfirstline
pop
di
pop
si
add
simaxbyte
add
dimaxbyte
mov
cxlineno
dont
scan
first
last
l
push
si
push
di
push
cx
call
scanonemiddleline
pop
cx
pop
di
pop
si
add
simaxbyte
add
dimaxbyte
loop
l
push
si
push
di
call
scanlastline
pop
si
pop
di
l
ret
iterate
hpp
rule
cx
times
iterate
push
cx
call
iterateonce
pop
cx
call
showgas
loop
iterate
ret
iterate
hpp
rule
cx
times
iterateuntil
mov
si
mov
cxoffset
iu
offset
iu
iu
mov
albyte
ptr
cssi
offset
iu
xor
byte
ptr
cssi
offset
iual
inc
si
loop
iu
iu
call
iterateonce
call
showgas
mov
sicssrcptr
mov
cxmaxbyte
mov
bx
mov
ah
mov
al
iu
mov
blbyte
ptr
cssi
mov
dlbyte
ptr
csbxwallrule
ah
xor
dlah
aldl
inc
si
loop
iu
mov
si
mov
cxoffset
iu
offset
iu
iu
mov
ahbyte
ptr
cssioffset
iu
ahal
xor
byte
ptr
cssioffset
iuah
inc
si
loop
iu
jmp
iu
iu
mov
axoffset
iu
push
ax
ret
db
duph
iu
push
ax
push
bx
push
cx
push
dx
push
ds
mov
ah
mov
dxcsmsgptr
int
h
pop
ds
pop
dx
pop
cx
pop
bx
pop
ax
ret
db
duph
msgptr
dw
offset
msg
msg
db
message
printed
db
code
decrypted
using
data
lattice
db
applied
decoding
routine
db
every
time
step
db
decoding
function
left
code
unchanged
db
except
gas
evolution
completelly
db
reversed
thermalization
times
equ
repetitions
enough
equilibrate
gas
begin
mov
axh
mov
bh
mov
dh
mov
dl
mov
cx
int
h
mov
ah
mov
bh
mov
dh
mov
dl
int
h
call
initgas
call
showgas
mov
ah
int
h
push
cx
mov
cxtimes
call
iterate
call
invertall
call
showgas
mov
ah
int
h
cmp
al
jne
begin
mov
sicssrcptr
xor
byte
ptr
cssib
begin
mov
cxtimes
call
iterateuntil
call
invertall
call
showgas
mov
axch
int
h
code
ends
end
start
