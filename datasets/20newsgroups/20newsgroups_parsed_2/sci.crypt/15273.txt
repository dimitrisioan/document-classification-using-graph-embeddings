subject
source
random
bits
unix
workstation
article
bennett
todd
salomon
brothers
inc
ny
writes
heard
solution
sounded
good
heard
folks
experiencing
times
seconds
run
reasonablyconfigured
workstations
im
willing
add
much
delay
someones
login
process
approach
etherfindcompress
skip
k
takes
second
two
run
im
considering
writing
beall
endall
solutions
launches
md
simultaneously
tries
suck
bits
net
net
sitting
idle
cant
get
k
compression
md
finishes
use
md
way
could
guaranteed
good
bits
deterministic
upper
bound
login
time
still
common
case
login
take
couple
extra
seconds
seconds
hash
core
bet
know
source
information
acceptable
part
login
process
going
use
network
traffic
source
pseudorandom
information
right
thing
pass
cryptographic
hash
function
compressor
aside
fact
run
faster
give
better
results
think
cryptographic
hash
function
distills
randomness
something
along
lines
etherfind
x
n
dd
bsk
count
devnull
md
trick
gives
timestamps
lack
u
makes
sure
dd
get
ten
lines
opposed
ten
k
takes
couple
seconds
lightlyloaded
ethernet
bennett
ji
