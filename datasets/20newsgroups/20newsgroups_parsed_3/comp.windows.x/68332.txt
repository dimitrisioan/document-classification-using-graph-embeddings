subject
program
wmprotocol
in
open
look
toolkit
hi
all
i
am
studi
the
book
unix
desktop
guid
to
open
look
there
is
an
exampl
winpropc
that
demonstr
how
to
program
wmprotocol
properti
in
chapter
it
can
run
but
onli
show
the
static
text
messag
no
notic
popup
what
is
the
problem
thank
in
advanc
for
help
iop
file
winpropc
show
how
to
set
properti
on
a
window
includ
xxatomh
for
definit
of
xaatom
includ
xintrinsich
includ
xstringdefsh
includ
xolopenlookh
includ
xolstatictexth
includ
xoloblongbutth
includ
xolnoticeh
thi
file
defin
the
atom
with
ol
prefix
id
of
the
toplevel
and
noticeshel
widget
static
widget
toplevel
noticeshel
static
widget
makenotic
static
char
messag
client
use
properti
to
commun
with
the
window
manag
thi
exampl
illustr
how
an
open
look
applic
request
notif
from
the
window
manag
when
certain
event
occur
the
commun
is
in
the
form
of
a
clientmessag
event
that
the
applic
process
in
an
eventhandl
atom
use
for
intercli
commun
atom
atomwmprotocol
atomwmdeletewindow
atomwmsaveyourself
static
void
handlewmmessag
static
void
saveandexit
static
void
saveyourself
static
void
popnotic
static
void
doexit
string
to
hold
comand
line
for
use
in
respond
to
the
wmsaveyourself
protocol
messag
char
savedcmdlin
void
mainargc
argv
int
argc
char
argv
widget
w
int
i
save
the
commandlin
for
use
in
respond
to
the
wmsaveyourself
protocol
messag
sprintfsavedcmdlin
s
argv
ifargc
fori
i
argc
i
strcatsavedcmdlin
argvi
strcatsavedcmdlin
creat
and
initi
the
toplevel
widget
toplevel
olinitializeargv
olmain
null
argc
argv
creat
a
statictext
widget
w
xtvacreatemanagedwidgetstext
statictextwidgetclass
toplevel
xtnstring
messag
xtnwidth
null
creat
a
noticeshel
widget
for
later
use
makenoticetoplevel
intern
the
atom
atomwmprotocol
xinternatomxtdisplayw
wmprotocol
fals
atomwmdeletewindow
xinternatomxtdisplayw
wmdeletewindow
fals
atomwmsaveyourself
xinternatomxtdisplayw
wmsaveyourself
fals
add
an
eventhandl
to
process
clientmessag
event
sent
by
the
window
manag
xtaddeventhandlertoplevel
noeventmask
true
handlewmmessag
null
realiz
the
widget
and
start
process
event
xtrealizewidgettoplevel
append
the
properti
wmdeletewindow
and
wmsaveyourself
to
the
definit
of
the
wmprotocol
properti
thi
step
requir
the
window
id
of
the
toplevel
widget
the
window
id
is
valid
onli
after
the
widget
is
realiz
xchangepropertyxtdisplaytoplevel
xtwindowtoplevel
atomwmprotocol
xaatom
propmodeappend
atomwmdeletewindow
xchangepropertyxtdisplaytoplevel
xtwindowtoplevel
atomwmprotocol
xaatom
propmodeappend
atomwmsaveyourself
xtmainloop
static
void
handlewmmessagesw
clientdata
pevent
widget
w
xtpointer
clientdata
xevent
pevent
ifpeventtyp
clientmessag
peventxclientmessagetyp
atomwmprotocol
ifpeventxclientdat
atomwmdeletewindow
saveandexit
ifpeventxclientdat
atomwmsaveyourself
saveyourself
static
void
saveandexit
display
a
notic
give
the
user
a
chanc
to
respond
popnoticetoplevel
noticeshel
static
void
saveyourself
set
the
wmcommand
properti
to
the
save
commandlin
xchangepropertyxtdisplaytoplevel
xtwindowtoplevel
xawmcommand
xastr
propmodereplac
savedcmdlin
strlensavedcmdlin
static
widget
makenoticepar
widget
parent
widget
w
ntext
ncontrol
nexit
ncancel
creat
a
button
and
provid
a
callback
to
pop
up
a
notic
w
xtvacreatemanagedwidgetquitbutton
oblongbuttonwidgetclass
parent
xtnlabel
exit
null
xtaddcallbackw
xtnselect
popnotic
null
creat
the
noticeshel
widget
note
that
you
have
to
use
xtvacreatepopupshel
instead
of
the
usual
xtvacreatemanagedwidget
noticeshel
xtvacreatepopupshellquitnotic
noticeshellwidgetclass
w
null
get
the
id
of
the
text
and
control
area
widget
of
the
noticeshel
xtvagetvaluesnoticeshel
xtntextarea
ntext
xtncontrolarea
ncontrol
null
place
a
messag
in
the
text
area
of
the
noticeshel
xtvasetvaluesntext
xtnstring
pleas
confirm
exit
from
program
null
add
button
to
the
control
area
of
the
noticeshel
each
button
ha
an
appropri
callback
nexit
xtvacreatemanagedwidgetnoticeexit
oblongbuttonwidgetclass
ncontrol
xtnlabel
exit
null
xtaddcallbacknexit
xtnselect
doexit
null
ncancel
xtvacreatemanagedwidgetnoticecancel
oblongbuttonwidgetclass
ncontrol
xtnlabel
cancel
xtndefault
true
null
return
w
static
void
popnoticeweman
wnotic
widget
weman
wnotic
xtvasetvalueswnotic
xtnemanatewidget
weman
null
pop
up
the
noticeshel
widget
the
noticeshel
widget
make
sure
that
the
aplic
wait
until
the
user
select
from
one
of
the
button
in
the
noticeshel
control
area
xtpopupwnotic
xtgrabexclus
static
void
doexitw
calldata
clientdata
widget
w
xtpointer
calldata
clientdata
xclosedisplayxtdisplayw
exit
