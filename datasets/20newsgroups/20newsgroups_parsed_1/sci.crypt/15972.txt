subject
re
s
s
steve
brinich
writes
second
question
why
why
is
such
a
strange
procedure
used
and
not
a
real
rng
this
turns
those
ss
in
a
kind
of
bottleneck
for
system
security
the
only
theory
that
makes
any
sense
is
that
s
and
s
are
either
the
same
for
all
chips
or
vary
among
very
few
possibilities
so
that
anyone
trying
to
break
the
encryption
by
brute
force
need
only
plow
through
the
possible
serial
numbers
about
one
billion
multiplied
by
the
number
of
different
s
s
combinations
my
interpretation
of
dennings
description
is
that
s
and
s
are
chosen
randomly
by
agents
of
the
key
escrow
companies
at
the
start
of
each
chip
programming
session
i
imagine
that
the
chips
are
in
a
carrier
which
will
allow
them
all
to
be
programmed
fairly
quickly
there
would
not
be
a
need
to
transfer
chips
one
at
a
time
into
a
little
pla
programmer
as
some
people
have
envisioned
my
guess
as
to
why
this
procedure
is
used
is
that
basing
the
keys
on
the
s
and
s
using
a
specified
algorithm
provides
an
inprinciple
checkable
way
to
verify
that
no
back
doors
exist
in
the
choice
of
the
random
numbers
used
to
generate
the
keys
since
we
have
to
trust
the
escrow
companies
anyway
it
does
not
weaken
the
system
to
have
the
keys
be
generated
from
random
seeds
entered
by
the
escrow
agents
and
since
the
algorithm
for
keygeneration
is
public
modulo
skipjack
secrecy
then
in
principle
an
agent
could
challenge
the
procedure
ask
for
s
and
s
to
be
exposed
and
run
his
own
independent
calculation
of
u
and
u
to
verify
that
that
is
what
is
actually
being
put
onto
the
floppies
and
yes
there
are
many
ways
in
which
failures
to
follow
this
scheme
could
be
hard
to
check
the
laptop
probably
will
not
really
be
destroyed
each
time
hidden
cameras
in
the
ceiling
could
see
the
s
and
s
entered
by
the
trusted
escrow
agents
back
doors
in
the
chip
could
allow
u
to
be
recovered
heck
each
chip
could
be
recorded
with
the
same
u
ignoring
what
was
on
the
floppy
hal
finney
