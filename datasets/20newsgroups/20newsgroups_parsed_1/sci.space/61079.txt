subject
re
level
in
henry
spencer
writes
in
article
fred
j
mccall
writes
given
that
ive
heard
the
shuttle
software
rated
as
level
level
out
of
how
many
also
keep
in
mind
that
it
was
not
achieved
through
the
use
of
sophisticated
tools
but
rather
through
a
brute
force
and
ignorance
attack
on
the
problem
during
the
challenger
standdown
they
simply
threw
hundreds
of
people
at
it
and
did
the
whole
process
by
hand
i
think
this
is
a
little
inaccurate
based
on
feynmans
account
of
the
softwaredevelopment
process
before
the
standdown
fred
is
basically
correct
no
sophisticated
tools
just
a
lot
of
effort
and
painstaking
care
but
they
got
this
one
right
before
challenger
feynman
cited
the
software
people
as
exemplary
compared
to
the
engine
people
he
also
noted
that
the
software
people
were
starting
to
feel
management
pressure
to
cut
corners
but
hadnt
had
to
give
in
to
it
much
yet
among
other
things
the
software
people
worked
very
hard
to
get
things
right
for
the
major
preflight
simulations
and
considered
a
failure
during
those
simulations
to
be
nearly
as
bad
as
an
inflight
failure
as
a
result
the
number
of
majorsimulation
failures
could
be
counted
on
one
hand
and
the
number
of
inflight
failures
was
zero
as
fred
mentioned
elsewhere
this
applies
only
to
the
flight
software
software
that
runs
experiments
is
typically
mostly
put
together
by
the
experimenters
and
gets
nowhere
near
the
same
level
of
tender
loving
care
none
of
the
experimenters
could
afford
it
all
work
is
one
mans
work
henry
spencer
u
of
toronto
zoology
kipling
utzoohenry
newssoftware
ureply
xxfrom
bret
wingert
references
in
henry
spencer
writes
in
article
fred
j
mccall
writes
given
that
ive
heard
the
shuttle
software
rated
as
level
level
out
of
how
many
also
keep
in
mind
that
it
was
not
achieved
through
the
use
of
sophisticated
tools
but
rather
through
a
brute
force
and
ignorance
attack
on
the
problem
during
the
challenger
standdown
they
simply
threw
hundreds
of
people
at
it
and
did
the
whole
process
by
hand
i
think
this
is
a
little
inaccurate
based
on
feynmans
account
of
the
softwaredevelopment
process
before
the
standdown
fred
is
basically
correct
no
sophisticated
tools
just
a
lot
of
effort
and
painstaking
care
but
they
got
this
one
right
before
challenger
feynman
cited
the
software
people
as
exemplary
compared
to
the
engine
people
he
also
noted
that
the
software
people
were
starting
to
feel
management
pressure
to
cut
corners
but
hadnt
had
to
give
in
to
it
much
yet
as
fred
mentioned
elsewhere
this
applies
only
to
the
flight
software
software
that
runs
experiments
is
typically
mostly
put
together
by
the
experimenters
and
gets
nowhere
near
the
same
level
of
tender
loving
care
a
couple
of
points
on
this
thread
we
have
been
using
our
processes
since
way
before
challenger
challenger
in
and
of
it
self
did
not
uncover
flaws
what
mr
spencer
says
is
by
and
large
true
we
have
a
process
that
is
not
dependent
on
sophisticated
tools
case
tools
however
tools
can
not
fix
a
bad
process
also
tool
support
for
hals
the
shuttle
language
is
somewhat
limited
the
onboard
flight
software
project
was
rated
level
by
a
nasa
team
this
group
generates
kslocs
of
verified
code
per
year
for
nasa
feel
free
to
call
me
if
you
or
your
organization
is
interested
in
more
info
on
our
software
development
process
bret
wingert
fax
bret
wingert
fax
